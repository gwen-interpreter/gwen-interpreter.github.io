"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[721],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=o,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return t?r.createElement(k,i(i({ref:n},u),{},{components:t})):r.createElement(k,i({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8215:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(7294);function o(e){var n=e.children,t=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:o},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return u}});var r=t(3117),o=t(7294),a=t(2389),i=t(662),l=t(6010),s="tabItem_LplD";function c(e){var n,t,a,c=e.lazy,u=e.block,d=e.defaultValue,p=e.values,m=e.groupId,k=e.className,f=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=p?p:f.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),w=(0,i.lx)(g,(function(e,n){return e.value===n.value}));if(w.length>0)throw new Error('Docusaurus error: Duplicate values "'+w.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===d?d:null!=(n=null!=d?d:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(a=f[0])?void 0:a.props.value;if(null!==v&&!g.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var h=(0,i.UB)(),b=h.tabGroupChoices,y=h.setTabGroupChoices,N=(0,o.useState)(v),j=N[0],O=N[1],D=[],C=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var E=b[m];null!=E&&E!==j&&g.some((function(e){return e.value===E}))&&O(E)}var x=function(e){var n=e.currentTarget,t=D.indexOf(n),r=g[t].value;r!==j&&(C(n),O(r),null!=m&&y(m,r))},S=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=D.indexOf(e.currentTarget)+1;t=D[r]||D[0];break;case"ArrowLeft":var o=D.indexOf(e.currentTarget)-1;t=D[o]||D[D.length-1]}null==(n=t)||n.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":u},k)},g.map((function(e){var n=e.value,t=e.label,a=e.attributes;return o.createElement("li",(0,r.Z)({role:"tab",tabIndex:j===n?0:-1,"aria-selected":j===n,key:n,ref:function(e){return D.push(e)},onKeyDown:S,onFocus:x,onClick:x},a,{className:(0,l.Z)("tabs__item",s,null==a?void 0:a.className,{"tabs__item--active":j===n})}),null!=t?t:n)}))),c?(0,o.cloneElement)(f.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},f.map((function(e,n){return(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==j})}))))}function u(e){var n=(0,a.Z)();return o.createElement(c,(0,r.Z)({key:String(n)},e))}},3350:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var r=t(3117),o=t(102),a=(t(7294),t(3905)),i=(t(9960),t(9877),t(8215),t(4996),["components"]),l={title:"Docker",toc_min_heading_level:2,toc_max_heading_level:3},s="Running Gwen in Docker",c={unversionedId:"docker",id:"docker",title:"Docker",description:"Sometimes it may be useful to run Gwen in a docker container. For example, if you want to run Gwen in a continuous integration pipeline on a build server or node agent.",source:"@site/docs/12-docker.mdx",sourceDirName:".",slug:"/docker",permalink:"/docs/docker",editUrl:"https://github.com/gwen-interpreter/gwen-interpreter.github.io/edit/master/docs/12-docker.mdx",tags:[],version:"current",sidebarPosition:12,frontMatter:{title:"Docker",toc_min_heading_level:2,toc_max_heading_level:3},sidebar:"tutorialSidebar",previous:{title:"Implicit Attributes",permalink:"/docs/advanced/implicit-attributes"},next:{title:"Gwen 3 Release",permalink:"/docs/gwen3"}},u={},d=[{value:"Dockerfile",id:"dockerfile",level:2},{value:"Docker compose",id:"docker-compose",level:2},{value:"Selenoid configuration",id:"selenoid-configuration",level:2},{value:"Selenoid browsers file",id:"selenoid-browsers-file",level:3},{value:"Gwen settings file",id:"gwen-settings-file",level:3},{value:"Yarn script",id:"yarn-script",level:2},{value:"Run in docker",id:"run-in-docker",level:2},{value:"Video recordings",id:"video-recordings",level:3}],p={toc:d};function m(e){var n=e.components,l=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,l,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"running-gwen-in-docker"},"Running Gwen in Docker"),(0,a.kt)("p",null,"Sometimes it may be useful to run Gwen in a ",(0,a.kt)("a",{parentName:"p",href:"https://www.docker.com/"},"docker")," container. For example, if you want to run Gwen in a continuous integration pipeline on a build server or node agent."),(0,a.kt)("h2",{id:"dockerfile"},"Dockerfile"),(0,a.kt)("p",null,"The first thing you need to do is create a suitable docker image for Gwen to run in. It will need to have Java 8+, node 12+, bash and yarn installed (since we will be using yarn in the examples that follow)."),(0,a.kt)("p",null,"To build your own image:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a new file named ",(0,a.kt)("inlineCode",{parentName:"li"},"Dockerfile")," in the root of your Gwen project (",(0,a.kt)("a",{parentName:"li",href:"/docs/get-started"},"create a Gwen project")," if you don't have one).")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{2}","{2}":!0},"/project                    # Your project root\n\u2514\u2500\u2500 Dockerfile              # Docker image file\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Save one of the following examples into the file.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Alpine Linux and Node base image with Open JDK 8 JRE installed:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# base alpine image with node\nFROM node:17-alpine\n\n# install bash and java\nRUN apk update \\\n    && apk add bash \\\n    && apk add openjdk8-jre\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Or Red Hat Linux and Open JDK 8 base image with node installed:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# base Red Hat image with open JDK 8\nFROM adoptopenjdk/openjdk8:ubi\n\n# install node & yarn\nRUN dnf module install nodejs:16 -y\nRUN npm install --global yarn\n")),(0,a.kt)("h2",{id:"docker-compose"},"Docker compose"),(0,a.kt)("p",null,"Next, we need to configure a ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file to create docker containers for Gwen and at least one web browser for it to run against. Here, we will use ",(0,a.kt)("a",{parentName:"p",href:"https://aerokube.com/selenoid/"},"Selenoid")," to stand up a chrome browser, video recorder, and Selenium hub that Gwen will connect to."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a new file named ",(0,a.kt)("inlineCode",{parentName:"li"},"docker-compose.yaml")," in the root of your Gwen project.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{3}","{3}":!0},"/project                    # Your project root\n\u251c\u2500\u2500 Dockerfile              # Docker image file\n\u2514\u2500\u2500 docker-compose.yml      # Docker compose YAML file\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Save the following content into the file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'version: \'3.5\'\nservices:\n  chrome:\n    image: selenoid/chrome:latest\n    networks:\n      - gwen-net\n  video-recorder:\n    image: selenoid/video-recorder:latest-release\n    networks:\n      - gwen-net\n  selenoid:\n    depends_on:\n      - chrome\n      - video-recorder\n    image: aerokube/selenoid:latest-release\n    networks:\n      - gwen-net\n    ports:\n      - "4444:4444"\n    environment:\n      - OVERRIDE_VIDEO_OUTPUT=$PWD/gwen/output/.video\n    volumes:\n      - "$PWD/gwen/browsers:/etc/selenoid/:ro"\n      - "/var/run/docker.sock:/var/run/docker.sock"\n      - "$PWD/gwen/output/.video:/opt/selenoid/video"\n    command: ["-container-network", "gwen-net", "-video-output-dir", "/opt/selenoid/video"]\n  gwen:\n    depends_on:\n      - selenoid\n    build:\n      context: .\n      dockerfile: Dockerfile\n    environment:\n      - SELENIUM_HUB=selenoid\n      - NO_COLOR=1\n    volumes:\n      - "$PWD:/project"\n    working_dir: /project\n    command: bash -c "yarn install && yarn gwen:selenoid"\n    networks:\n      - gwen-net\nnetworks:\n  gwen-net:\n    name: gwen-net\n')),(0,a.kt)("h2",{id:"selenoid-configuration"},"Selenoid configuration"),(0,a.kt)("h3",{id:"selenoid-browsers-file"},"Selenoid browsers file"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a ",(0,a.kt)("inlineCode",{parentName:"li"},"browsers.json")," file in the ",(0,a.kt)("inlineCode",{parentName:"li"},"gwen/browsers")," directory of your Gwen project.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{4}","{4}":!0},"/project                    # Your project root\n\u2514\u2500\u2500 /gwen                   # Gwen working directory\n    \u2514\u2500\u2500 browsers\n        \u2514\u2500\u2500browsers.json    # Selenoid browsers file\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Save the following content into the file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "chrome": {\n    "default": "latest",\n    "versions": {\n      "latest": {\n        "image": "selenoid/chrome:latest",\n        "port": "4444",\n        "path": "/"\n      }\n    }\n  }\n}\n')),(0,a.kt)("h3",{id:"gwen-settings-file"},"Gwen settings file"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a ",(0,a.kt)("inlineCode",{parentName:"li"},"selenoid.conf")," settings file in the ",(0,a.kt)("inlineCode",{parentName:"li"},"gwen/browsers")," directory of your Gwen project.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{5}","{5}":!0},"/project                    # Your project root\n\u2514\u2500\u2500 /gwen                   # Gwen working directory\n    \u2514\u2500\u2500 browsers\n        \u251c\u2500\u2500browsers.json    # Selenoid browsers file\n        \u2514\u2500\u2500selenoid.conf    # Selenoid Gwen settings\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Save the following content into the file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'gwen {\n  web {\n    capability {\n      enableVNC = true\n      enableVideo = true\n    \xa0 acceptSslCerts = true\n    }\n    remote {\n      url = "http://${SELENIUM_HUB}:4444/wd/hub"\n    }\n  }\n}\n')),(0,a.kt)("h2",{id:"yarn-script"},"Yarn script"),(0,a.kt)("p",null,"Next, add the following ",(0,a.kt)("inlineCode",{parentName:"p"},"gwen:selenoid")," script to the ",(0,a.kt)("inlineCode",{parentName:"p"},"scripts")," section of the ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," file in your Gwen project, replacing ",(0,a.kt)("inlineCode",{parentName:"p"},"gwen/samples")," with the directory containing the features you want to execute.\nThis will be called by the ",(0,a.kt)("inlineCode",{parentName:"p"},"gwen")," container in our ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file when it starts up."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:"{3}","{3}":!0},'"scripts": {\n  "gwen": "gwen",\n  "gwen:selenoid": "gwen -b -c gwen/browsers/selenoid.conf gwen/samples",\n  "SELENIUM_HUB=localhost yarn:selenoid"\n}\n')),(0,a.kt)("h2",{id:"run-in-docker"},"Run in docker"),(0,a.kt)("p",null,"Finally, ensure that your Docker engine is running on your machine and launch the following command in your project directory to spin everything up and run Gwen in docker:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose run gwen\n")),(0,a.kt)("p",null,"If you run into permission issues on the output directory, run the following command to create the shared output directory on the file system first before invoking docker compose."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir -p gwen/output\n")),(0,a.kt)("h3",{id:"video-recordings"},"Video recordings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:"{5}","{5}":!0},"gwen {\n  web {\n    capability {\n      ..\n      enableVideo = true\n    \xa0 ..\n    }\n    ..\n  }\n}\n")),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"gwen.web.capability.videoEnabled")," is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," in your ",(0,a.kt)("em",{parentName:"p"},"gwen/browsers/selenoid.conf")," file, MP4 video recordings of each session will be attached to the feature level ",(0,a.kt)("a",{parentName:"p",href:"/docs/reports/html"},"HTML reports"),". Set this to ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," if you do not wish to capture video."),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"video settings")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("ul",{parentName:"div"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/settings/reference#gwen-video.dir"},(0,a.kt)("inlineCode",{parentName:"a"},"gwen-video.dir"))," ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Should match host directory mounted to ",(0,a.kt)("inlineCode",{parentName:"li"},"/opt/selenoid/video")," in Selenoid video-recorder"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/settings/reference#gwen-video.timeoutSecs"},(0,a.kt)("inlineCode",{parentName:"a"},"gwen-video.timeoutSecs"))," ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Time to wait for asyncronous vidoe writes to complete (override only if default does not suffice)")))))),(0,a.kt)("p",null,"A button will appear in the report header if one video was captured (one browser session):"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Example video button",src:t(5993).Z,width:"1754",height:"110"})),(0,a.kt)("p",null,"A dropdown will appear in the report header if several videos were captured (multiple browser sessions):"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Example video links",src:t(3271).Z,width:"1736",height:"244"})),(0,a.kt)("p",null,"Clicking a video button or link in the report will open and play the video in a new browser window."))}m.isMDXComponent=!0},5993:function(e,n,t){n.Z=t.p+"assets/images/sample-html-video-1-91f007176dacc97a324fec095249c9c1.png"},3271:function(e,n,t){n.Z=t.p+"assets/images/sample-html-video-2-38e721de40fa09381b4d2e3ad8f48dc7.png"}}]);