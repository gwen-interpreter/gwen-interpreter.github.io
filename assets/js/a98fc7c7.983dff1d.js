"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4311],{3147:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"js-functions","title":"JS Arrow Functions","description":"Since v3.56.0","source":"@site/docs/15-js-functions.mdx","sourceDirName":".","slug":"/js-functions","permalink":"/docs/js-functions","draft":false,"unlisted":false,"editUrl":"https://github.com/gwen-interpreter/gwen-interpreter.github.io/edit/master/docs/15-js-functions.mdx","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"toc_min_heading_level":2,"toc_max_heading_level":3},"sidebar":"tutorialSidebar","previous":{"title":"String Interpolation","permalink":"/docs/string-interpolation"},"next":{"title":"Implicit Values","permalink":"/docs/implicit-values"}}');var r=a(4848),s=a(8453);a(8774),a(1470),a(9365),a(6025);const i={toc_min_heading_level:2,toc_max_heading_level:3},l="JS Arrow Functions",o={},c=[{value:"Zero argument expressions",id:"zero-argument-expressions",level:2},{value:"Single argument functions",id:"single-argument-functions",level:2},{value:"Implicit argument binding",id:"implicit-argument-binding",level:3},{value:"Explicit argument binding",id:"explicit-argument-binding",level:3},{value:"Dynamic argument binding",id:"dynamic-argument-binding",level:3},{value:"Multi argument functions",id:"multi-argument-functions",level:2},{value:"Implicit argument binding",id:"implicit-argument-binding-1",level:3},{value:"Explicit argument binding",id:"explicit-argument-binding-1",level:3},{value:"Dynamic argument binding",id:"dynamic-argument-binding-1",level:3},{value:"Inlined functions",id:"inlined-functions",level:2},{value:"Expressions",id:"expressions",level:3},{value:"Blocks",id:"blocks",level:3},{value:"Nested",id:"nested",level:3},{value:"REPL Support",id:"repl-support",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"js-arrow-functions",children:"JS Arrow Functions"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Since ",(0,r.jsx)(n.a,{href:"https://github.com/gwen-interpreter/gwen-web/releases/tag/v3.56.0",children:"v3.56.0"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"You can execute JS functions in Gwen using the arrow syntax."}),"\n",(0,r.jsx)(n.h2,{id:"zero-argument-expressions",children:"Zero argument expressions"}),"\n",(0,r.jsx)(n.p,{children:"These accept no arguments and have either:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"a single expression in the body which returns a value"}),"\n",(0,r.jsx)(n.li,{children:"a block containing zero or more statements, followed by a return expression"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",children:'  Given today is defined by js "() => new Date().toISOString().substring(0, 10)"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",children:'    And tomorrow is defined by js\n        """\n        () => { \n            const today = new Date()\n            const tomorrow = new Date()\n            tomorrow.setDate(today.getDate() + 1)\n            return tomorrow.toISOString().substring(0, 10)\n        }\n        """\n'})}),"\n",(0,r.jsx)(n.p,{children:"Prior to arrow functions being introduced, the equivalent of the above was:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",children:'    And tomorrow is defined by js\n        """\n        (function() { \n            const today = new Date()\n            const tomorrow = new Date()\n            tomorrow.setDate(today.getDate() + 1)\n            return tomorrow.toISOString().substring(0, 10)\n        })()\n        """\n'})}),"\n",(0,r.jsx)(n.h2,{id:"single-argument-functions",children:"Single argument functions"}),"\n",(0,r.jsx)(n.p,{children:"These accept a single argument and have either:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"a single expression that operates on the argument in the body and returns a value"}),"\n",(0,r.jsx)(n.li,{children:"a block containing zero or more statements that operate on the argument, followed by a return expression"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"implicit-argument-binding",children:"Implicit argument binding"}),"\n",(0,r.jsxs)(n.p,{children:["An argument is implicity bound to a same named reference in scope. In the following example, the argument ",(0,r.jsx)(n.code,{children:"name"})," on line 2 takes on the value of the ",(0,r.jsx)(n.code,{children:"name"})," reference one line 1 which sources its text value from a web element."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",metastring:"showLineNumbers",children:'  Given name can be located by css ".name"\n    And uppercased name is defined by js "(name) => name.toUpperCase()"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Prior to arrow functions being introduced, the equivalent of the above was:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",children:"    And uppercased name is defined by js \"'${name}'.toUpperCase()\"\n"})}),"\n",(0,r.jsxs)(n.p,{children:["So if ",(0,r.jsx)(n.code,{children:"name"})," contained a single quote in it such as ",(0,r.jsx)(n.code,{children:"O'Reilly"})," for example, the above would have resolved to ",(0,r.jsx)(n.code,{children:"'O'Reilly'.toUpperCase()"}),", which would then result in a missing closed quote error at runtime. With arrow functions, this would never happen since the value is bound to the argument name and not a quoted literal. So arrow functions are much safer in this regard."]}),"\n",(0,r.jsx)(n.h3,{id:"explicit-argument-binding",children:"Explicit argument binding"}),"\n",(0,r.jsxs)(n.p,{children:["When references have spaces in their names, they cannot be implicitly bound to function arguments in the same manner as above (since JavaScript does not permit spaces in argument names). The solution is to explicitly assign the reference to the argument using the ",(0,r.jsx)(n.code,{children:"="})," operator. Here, the argument ",(0,r.jsx)(n.code,{children:"name"})," on line 4 takes on the value of the ",(0,r.jsx)(n.code,{children:"first name"})," reference on line 1 which sources its text value from a web element."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",metastring:"{1,4} showLineNumbers",children:'    Given first name can be located by css ".first_name"\n      And proper name is defined by js\n          """\n          (name = first name) => { \n              const head = name.charAt(0).toUpperCase()\n              const tail = name.slice(1).toLowerCase()\n              return head + tail\n          }\n          """\n'})}),"\n",(0,r.jsx)(n.h3,{id:"dynamic-argument-binding",children:"Dynamic argument binding"}),"\n",(0,r.jsx)(n.p,{children:"Suppose we wanted to reuse the above function to captitalise several names? The first step would be to redefine it without explicitly binding the name argument to any reference as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",children:'    Given capitalise is defined by js\n          """\n          (name) => { \n              const head = name.charAt(0).toUpperCase()\n              const tail = name.slice(1).toLowerCase()\n              return head + tail\n          }\n          """\n'})}),"\n",(0,r.jsxs)(n.p,{children:["We can then apply it to different names by binding each one. In the following example, line 3 binds the ",(0,r.jsx)(n.code,{children:"name"})," argument to the value returned by ",(0,r.jsx)(n.code,{children:"first name"}),", applies our ",(0,r.jsx)(n.code,{children:"capitalise"})," function (above) to that and stores the resulting value in ",(0,r.jsx)(n.code,{children:"proper first name"}),". Line 4 does the same but with ",(0,r.jsx)(n.code,{children:"last name"})," instead."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",metastring:"{3-4} showLineNumbers",children:'  Given first name can be located by css ".first_name"\n    And last name can be located by css ".last_name"\n    And proper first name is defined by capitalise applied to "${first name}"\n    And proper last name is defined by capitalise applied to "${last name}"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"multi-argument-functions",children:"Multi argument functions"}),"\n",(0,r.jsx)(n.p,{children:"These accept multiple arguments and have either:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"a single expression that operates on the arguments in the body and returns a value"}),"\n",(0,r.jsx)(n.li,{children:"a block containing zero or more statements that operate on the arguments, followed by a return expression"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"implicit-argument-binding-1",children:"Implicit argument binding"}),"\n",(0,r.jsxs)(n.p,{children:["Arguments are implicity bound to same named references. In this example, the arguments ",(0,r.jsx)(n.code,{children:"name"})," and ",(0,r.jsx)(n.code,{children:"surname"})," on line 3 take on the resolved values of the ",(0,r.jsx)(n.code,{children:"name"})," and ",(0,r.jsx)(n.code,{children:"surname"})," references on line 1 and 2 respecitvely, which each source their text values from two different web elements."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",metastring:"showLineNumbers",children:'  Given name can be located by css ".name"\n    And surname can be located by css ".surname"\n    And full name is defined by js "(name, surname) => name + \' \' + surname"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"explicit-argument-binding-1",children:"Explicit argument binding"}),"\n",(0,r.jsxs)(n.p,{children:["Here, the arguments ",(0,r.jsx)(n.code,{children:"name"})," and ",(0,r.jsx)(n.code,{children:"surname"})," on line 5 take on the resolved values of the ",(0,r.jsx)(n.code,{children:"first name"})," and ",(0,r.jsx)(n.code,{children:"last name"})," references on lines 1 and 2, which source their text values from two different web elements."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",metastring:"{1-2,5} showLineNumbers",children:'    Given first name can be located by css ".first_name"\n      And last name can be located by css ".last_name"\n      And full name is defined by js\n          """\n          (name = first name, surname = last name) => name + \' \' + surname\n          """\n'})}),"\n",(0,r.jsx)(n.h3,{id:"dynamic-argument-binding-1",children:"Dynamic argument binding"}),"\n",(0,r.jsx)(n.p,{children:"Suppose we wanted to reuse the above functions to captitalise both the first and last names and combine them into a proper full name?"}),"\n",(0,r.jsxs)(n.p,{children:["First, we capitalise the names by reusing the ",(0,r.jsx)(n.code,{children:"capitalise"})," function we defined earlier above:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",metastring:"{11-12}",children:'  Given capitalise is defined by js\n        """\n        (name) => { \n            const head = name.charAt(0).toUpperCase()\n            const tail = name.slice(1).toLowerCase()\n            return head + tail\n        }\n        """\n  And first name can be located by css ".first_name"\n  And last name can be located by css ".last_name"\n  And proper first name is defined by capitalise applied to "${first name}"\n  And proper last name is defined by capitalise applied to "${last name}"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Then we reuse and apply the first ",(0,r.jsx)(n.code,{children:"full name"})," function we defined earlier to combine the two:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",metastring:"{2}",children:'  And full name is defined by js "(name, surname) => name + \' \' + surname"\n  And proper full name is defined by full name applied to "${proper first name},${proper last name}" delimited by ","\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Prior to arrow functions being introduced, the ",(0,r.jsx)(n.code,{children:"full name"})," function needed to be defined like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",children:"  And full name is defined by js \"(function(name, surname) { return name + ' ' + surname })(arguments[0], arguments[1])\"\n"})}),"\n",(0,r.jsx)(n.p,{children:"The arrow function equivalent is much cleaner and simpler:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",children:"  And full name is defined by js \"(name, surname) => name + ' ' + surname\"\n"})}),"\n",(0,r.jsx)(n.h2,{id:"inlined-functions",children:"Inlined functions"}),"\n",(0,r.jsx)(n.p,{children:"Functions can be used in placehoder references inline."}),"\n",(0,r.jsx)(n.h3,{id:"expressions",children:"Expressions"}),"\n",(0,r.jsxs)(n.p,{children:["Consider the following which uses the ",(0,r.jsx)(n.code,{children:"@Eager"})," annotation to immediately evaluate a function and store the result in ",(0,r.jsx)(n.code,{children:"uppercased name"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",metastring:"{2}",children:'  Given name can be located by css ".name"\n    And @Eager uppercased name is defined by js " name => name.toUpperCase() "\n'})}),"\n",(0,r.jsx)(n.p,{children:"Another way to do this could be to declare the function inline as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",children:'    And uppercased name is "${ name => name.toUpperCase() }"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Functions can be inlined in this manner wherever placehoders are used. When used in this way, they evaluate immediately and cannot be reused elsewhere."}),"\n",(0,r.jsx)(n.h3,{id:"blocks",children:"Blocks"}),"\n",(0,r.jsxs)(n.p,{children:["A more complex example follows. If ",(0,r.jsx)(n.code,{children:"name"})," resolves to 'GWEN' and ",(0,r.jsx)(n.code,{children:"surname"})," resolves to 'Butterfly', then the following function would set ",(0,r.jsx)(n.code,{children:"fancy full name"})," to 'BUFFERFLY, Gwen'."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",metastring:"{3-12}",children:'  Given name can be located by css ".name"\n    And surname can be located by css ".surname"\n    And fancy full name is \n        """\n        ${ \n            (name, surname) => {\n              const firstName = name.charAt(0).toUpperCase() + name.slice(1).toLowerCase()\n              const lastName = surname.toUpperCase()\n              return lastName + \', \' + firstName\n            }\n        }\n        """\n'})}),"\n",(0,r.jsx)(n.h3,{id:"nested",children:"Nested"}),"\n",(0,r.jsxs)(n.p,{children:["Inlined functions can also be nested. The following example reads a number from a web page, pads it with leading zeroes and then uses that to reference a value configured in another binding. In this example, if the ",(0,r.jsx)(n.code,{children:"number"})," field on a web page contains 1, then ",(0,r.jsx)(n.code,{children:"username"})," will be assigned to the username bound to ",(0,r.jsx)(n.code,{children:"user.001.username"})," (which could be a configured in a setting for example)."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",metastring:"{2}",children:'  Given number can be located by css ".number"\n    And username is "${user.${ number => (\'00\' + number).slice(-3) }.username}"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Nesting should be used sparingly and would require the following annotation to pass a ",(0,r.jsx)(n.a,{href:"/docs/dry-run",children:"dry run"})," (since JS functions cannot be evaluated in dry runs):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gherkin",children:"  And username is    @DryRun(name=`number => ('00' + number).slice(-3)`,value='001')\n      \"\"\"\n      ${user.${ number => ('00' + number).slice(-3) }.username}\n      \"\"\"\n"})}),"\n",(0,r.jsx)(n.h2,{id:"repl-support",children:"REPL Support"}),"\n",(0,r.jsxs)(n.p,{children:["You can also exeucte arrow functions directly in the ",(0,r.jsx)(n.a,{href:"/docs/repl",children:"REPL console"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-script",children:"   __ ___      _____ _ __     _    \n  / _` \\ \\ /\\ / / _ \\ '_ \\   { \\,\" \n | (_| |\\ V  V /  __/ | | | {_`/   \n  \\__, | \\_/\\_/ \\___|_| |_|   `    \n  |___/                            \n\nWelcome to gwen-web v3.56.0\ngweninterpreter.org\n\n\nREPL Console\n\nEnter steps to evaluate or type help for more options..\n\ngwen> Given name is \"Gwen\"\n\n  [10ms] \u2714\n\ngwen> name => name.toUpperCase()\n\n  'GWEN'\n\ngwen> \n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},9365:(e,n,a)=>{a.d(n,{A:()=>i});a(6540);var t=a(4164);const r={tabItem:"tabItem_Ymn6"};var s=a(4848);function i(e){let{children:n,hidden:a,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,i),hidden:a,children:n})}},1470:(e,n,a)=>{a.d(n,{A:()=>y});var t=a(6540),r=a(4164),s=a(3104),i=a(6347),l=a(205),o=a(7485),c=a(1682),d=a(679);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:a}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:r}}=e;return{value:n,label:a,attributes:t,default:r}}))}(a);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function h(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:a}=e;const r=(0,i.W6)(),s=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,o.aZ)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function g(e){const{defaultValue:n,queryString:a=!1,groupId:r}=e,s=m(e),[i,o]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[c,u]=p({queryString:a,groupId:r}),[g,f]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,d.Dv)(a);return[r,(0,t.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:r}),b=(()=>{const e=c??g;return h({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{b&&o(b)}),[b]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),f(e)}),[u,f,s]),tabValues:s}}var f=a(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=a(4848);function j(e){let{className:n,block:a,selectedValue:t,selectValue:i,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,a=o.indexOf(n),r=l[a].value;r!==t&&(c(n),i(r))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;n=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;n=o[a]??o[o.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},n),children:l.map((e=>{let{value:n,label:a,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>o.push(e),onKeyDown:u,onClick:d,...s,className:(0,r.A)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":t===n}),children:a??n},n)}))})}function v(e){let{lazy:n,children:a,selectedValue:s}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,t.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function w(e){const n=g(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",b.tabList),children:[(0,x.jsx)(j,{...n,...e}),(0,x.jsx)(v,{...n,...e})]})}function y(e){const n=(0,f.A)();return(0,x.jsx)(w,{...e,children:u(e.children)},String(n))}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var t=a(6540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);