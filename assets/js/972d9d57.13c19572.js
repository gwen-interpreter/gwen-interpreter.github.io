"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[937],{927:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return r},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return l},default:function(){return h}});var a=n(7462),i=n(3366),o=(n(7294),n(3905)),s=(n(5064),n(8215),n(4996),["components"]),r={sidebar_position:1},d="Introduction",p={unversionedId:"introduction",id:"introduction",isDocsHomePage:!1,title:"Introduction",description:"Gwen",source:"@site/docs/introduction.mdx",sourceDirName:".",slug:"/introduction",permalink:"/docs/introduction",editUrl:"https://github.com/gwen-interpreter/gwen-interpreter.github.io/gwen-web/docs/introduction.mdx",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Get Started",permalink:"/docs/get-started"}},l=[{value:"Gwen",id:"gwen",children:[{value:"Automation Bindings for Gherkin",id:"automation-bindings-for-gherkin",children:[]}]},{value:"How it works",id:"how-it-works",children:[{value:"1. Declare your feature specs",id:"1-declare-your-feature-specs",children:[]},{value:"2. Compose your meta specs",id:"2-compose-your-meta-specs",children:[]},{value:"3. Launch Gwen to automate",id:"3-launch-gwen-to-automate",children:[]}]}],c={toc:l};function h(e){var t=e.components,n=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("h2",{id:"gwen"},"Gwen"),(0,o.kt)("h3",{id:"automation-bindings-for-gherkin"},"Automation Bindings for Gherkin"),(0,o.kt)("p",null,"Gwen is a ",(0,o.kt)("a",{parentName:"p",href:"https://cucumber.io/docs/gherkin/reference/"},"Gherkin")," interpreter that executes feature specs to automate web application testing and repetitive web processing using bindings in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen/wiki/Meta-Features"},"meta specs")," that you compose with the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/wiki/Supported-DSL"},"Gwen DSL"),"."),(0,o.kt)("h2",{id:"how-it-works"},"How it works"),(0,o.kt)("h3",{id:"1-declare-your-feature-specs"},"1. Declare your feature specs"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Declarative Feature Specifications")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Declare feature specs to describe how scenarios and examples must behave."))),(0,o.kt)("p",null,"The following example describes how adding items to a todo list should behave."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},"Feature: Add todo items\n \n  Scenario: Create todo list\n    Given a new todo list\n     When the following items are added\n          | Item          |\n          | Get the milk  |\n          | Walk the dog  |\n     Then the list will contain 2 items\n")),(0,o.kt)("p",null,'Feature specs are used to communicate requirements that are clear, concise and declarative. Gwen aims to take these requirements "as is" and make them executable to drive automated testing both during and after development. It interprets each step and evaluates it using an embedded automation engine that executes to perform operations and checks consistently and reliably across browsers and platforms according to bindings that you specify in meta.'),(0,o.kt)("h3",{id:"2-compose-your-meta-specs"},"2. Compose your meta specs"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Imperative Meta Specifications")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Compose meta specs to describe how your features are to be evaluated."))),(0,o.kt)("p",null,"The following example describes how the above feature might be tested against a ",(0,o.kt)("a",{parentName:"p",href:"http://todomvc.com/examples/react"},"todo application"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},'Feature: Todo Meta\n\n\n  @Context\n  @StepDef\n  Scenario: a new todo list\n      Given the todo page url is "${todo.page.url}"\n       When I navigate to the todo page\n       Then the todo field can be located by class "new-todo"\n        And the displayed count can be located by css ".todo-count strong"\n\n  @Action\n  @StepDef\n  @ForEachTableRecord(header="top")\n  Scenario: the following items are added\n       When I enter data[Item] in the todo field\n\n  @Assertion\n  @StepDef\n  Scenario: the list will contain <expected count> items\n       Then the displayed count should be "$<expected count>"\n')),(0,o.kt)("p",null,"Meta specs describe what Gwen will evaluate in Gherkin syntax and are necessarily imperative. They specify all the step definitions and bindings required for execution and evaluation."),(0,o.kt)("h4",{id:"declaring-step-definitions"},"Declaring step definitions"),(0,o.kt)("p",null,"Each step definition is declared as a ",(0,o.kt)("inlineCode",{parentName:"p"},"@StepDef")," annotated scenario with a name that matches that of the step in the feature it binds to. Each one calls out to one or more Gwen DSL steps (or other step definitions) which will perform the specified operations at run time."),(0,o.kt)("h4",{id:"accessing-externalised-properties"},"Accessing externalised properties"),(0,o.kt)("p",null,"The first step definition in our meta example binds to the first step in the feature which will execute when that step is interpreted by Gwen. The first thing it does is read the externalised ",(0,o.kt)("inlineCode",{parentName:"p"},"todo.page.url")," property into a ",(0,o.kt)("inlineCode",{parentName:"p"},"URL")," attribute bound to the ",(0,o.kt)("inlineCode",{parentName:"p"},"todo page")," scope. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},'Given the todo page url is "${todo.page.url}"\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Calls Gwen DSL:")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/wiki/Supported-DSL#the-page-url-is-url"},(0,o.kt)("inlineCode",{parentName:"a"},'the <page> url is "<url>"'))))),(0,o.kt)("p",null,"We could of just hard coded the ",(0,o.kt)("inlineCode",{parentName:"p"},"http://todomvc.com/examples/react")," URL here, but externalising it to a settings file facilitates configuring a different URL per environment. This is useful when a feature is in development or deployed on different hosts and ports during the various phases of testing. With this approach you can define one settings file per environment and assign the URL for that environment to the ",(0,o.kt)("inlineCode",{parentName:"p"},"todo.page.url")," property in that file. Passing the settings file for your target environment to Gwen will then result in the URL for that environment being assigned. In this way, one meta spec can serve to execute against many environments."),(0,o.kt)("h4",{id:"navigating-to-a-web-page"},"Navigating to a web page"),(0,o.kt)("p",null,"The next step in this step definition starts a new browser window and navigates to the todo page by implicitly resolving the aforementioned ",(0,o.kt)("inlineCode",{parentName:"p"},"URL")," attribute bound to the ",(0,o.kt)("inlineCode",{parentName:"p"},"todo page")," scope by the previous step."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},"When I navigate to the todo page\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Calls Gwen DSL:")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/wiki/Supported-DSL#i-navigate-to-the-page"},(0,o.kt)("inlineCode",{parentName:"a"},'I navigate to the <page>"'))))),(0,o.kt)("h4",{id:"locating-web-elements"},"Locating web elements"),(0,o.kt)("p",null,"The next two steps define the web element selectors for locating ",(0,o.kt)("inlineCode",{parentName:"p"},"the todo field")," and the ",(0,o.kt)("inlineCode",{parentName:"p"},"the displayed count")," web elements and binds them to those exact names for later use by the other step definitions. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},'Then the todo field can be located by class "new-todo"\n And the displayed count can be located by css ".todo-count strong"\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Both call Gwen DSL:")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/wiki/Supported-DSL#element-can-be-located-by-idnametag-nametagcss-selectorcssxpathclass-nameclasslink-textpartial-link-textjavascriptjs-expression"},(0,o.kt)("inlineCode",{parentName:"a"},'<element> can be located by <id|name|tag name|tag|css selector|css|xpath|class name|class|link text|partial link text|javascript|js> "<expression>"'))))),(0,o.kt)("p",null,"Gwen will locate and interact with those elements wherever those names are referenced in subsequent DSL steps in the meta spec. Gwen supports all the standard Selenium selectors and additionally JavaScript selector expressions too which are very handy for those special edge cases where the standard ones are not dynamic enough or where evaluating a function on a page may be necessary."),(0,o.kt)("h4",{id:"processing-data-tables"},"Processing data tables"),(0,o.kt)("p",null,"The second step definition specifies the ",(0,o.kt)("inlineCode",{parentName:"p"},"@ForEachDataRecord")," annotation to process each record of data in the table of the second step in the feature."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},'@ForEachTableRecord(header="top")\nScenario: the following items are added\n     When I enter data[Item] in the todo field\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Calls Gwen DSL:")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/wiki/Supported-DSL#i-entertype-attribute-in-element"},(0,o.kt)("inlineCode",{parentName:"a"},'I <enter|type> <attribute> in <element>"'))))),(0,o.kt)("p",null,"It internally binds the field name specified in the table header to the field value in each record as it is iterated over. The step in the body references the ",(0,o.kt)("inlineCode",{parentName:"p"},"Item")," field as ",(0,o.kt)("inlineCode",{parentName:"p"},"data[Item]")," for every data record and enters the resolved value into ",(0,o.kt)("inlineCode",{parentName:"p"},"the todo field"),", which Gwen locates using the selector we defined for that field in the first step definition. "),(0,o.kt)("h4",{id:"passing-parameters-to-step-definitions"},"Passing parameters to step definitions"),(0,o.kt)("p",null,"The last step definition accepts the number of expected items from the last step in the feature into a parameter placeholder named ",(0,o.kt)("inlineCode",{parentName:"p"},"expected count")," and then uses that to assert its value against ",(0,o.kt)("inlineCode",{parentName:"p"},"the displayed count"),", which Gwen retrieves using the selector we defined for that displayed value in the first step definition."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},'@StepDef\nScenario: the list will contain <expected count> items\n     Then the displayed count should be "$<expected count>"\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Calls Gwen DSL:")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/wiki/Supported-DSL#elementattribute-shouldshould-not-becontainstart-withend-withmatch-regexmatch-xpathmatch-templatematch-template-file-expression"},(0,o.kt)("inlineCode",{parentName:"a"},'<element|attribute> <should|should not> <be|contain|start with|end with|match regex|match xpath|match template|match template file> "<expression>"'))))),(0,o.kt)("h4",{id:"enforcing-behavioral-constraints"},"Enforcing behavioral constraints"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@Context"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"@Action"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"@Assertion")," annotations denote behavior types and are used to place constraints on step definitions permitting them to only be bound to feature steps declared with the respectively compatible keywords ",(0,o.kt)("inlineCode",{parentName:"p"},"Given"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"When"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"Then"),". Any violations will be reported by Gwen as errors to help enforce correct Gherkin semantics in feature specs."),(0,o.kt)("p",null,"For example, consider the last step in the feature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},"Then the list will contain 2 items\n")),(0,o.kt)("p",null,"This step is declared with the ",(0,o.kt)("inlineCode",{parentName:"p"},"Then")," keyword which implies an assertion. The step itself reads like an assertion. But is it really that? Let's look at the step definition we defined for it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},'@Assertion\n@StepDef\nScenario: the list will contain <expected count> items\n     Then the displayed count should be "$<expected count>"\n')),(0,o.kt)("p",null,"This step definition is annotated with ",(0,o.kt)("inlineCode",{parentName:"p"},"@Assertion"),". The step in the body calls out to a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/wiki/Supported-DSL#elementattribute-shouldshould-not-becontainstart-withend-withmatch-regexmatch-xpathmatch-templatematch-template-file-expression"},"Gwen DSL step")," that really does perform an assertion. Therefore the last step in the feauture is an assertion and this binding is permitted."),(0,o.kt)("p",null,"If we were to change the keyword of the last step in the feature to ",(0,o.kt)("inlineCode",{parentName:"p"},"When")," however, it would not only read poorly but would also imply action behavior which would no longer be compabile with the step definition which is constrained with ",(0,o.kt)("inlineCode",{parentName:"p"},"@Assertion")," and not ",(0,o.kt)("inlineCode",{parentName:"p"},"@Action"),". Therefore this binding would not be permitted and Gwen would raise it as an error. "),(0,o.kt)("h3",{id:"3-launch-gwen-to-automate"},"3. Launch Gwen to automate"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Executable Specifications")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Launch Gwen to bind your meta and feature specs and automate execution."))),(0,o.kt)("p",null,"For the examples presented here, that would be an automated test execution."),(0,o.kt)("p",null,"Your meta governs what will be evaluated and this need not be confined to just testing. You can use Gwen to automate other similarly repetitive and robotic processes too."))}h.isMDXComponent=!0}}]);