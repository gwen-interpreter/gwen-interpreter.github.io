"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3740],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=a,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return i}});var r=n(7294),a=n(4334),o="tabItem_Ymn6";function i(e){var t=e.children,n=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,i),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return S}});var r=n(3117),a=n(7294),o=n(4334),i=n(6775),l=n(1980),u=n(7392),s=n(12);function c(e){return function(e){var t,n;return null!=(t=null==(n=a.Children.map(e,(function(e){if(!e||(0,a.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function p(e){var t=e.values,n=e.children;return(0,a.useMemo)((function(){var e=null!=t?t:c(n);return function(e){var t=(0,u.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function d(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function f(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId,o=(0,i.k6)(),u=function(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:n,groupId:r});return[(0,l._X)(u),(0,a.useCallback)((function(e){if(u){var t=new URLSearchParams(o.location.search);t.set(u,e),o.replace(Object.assign({},o.location,{search:t.toString()}))}}),[u,o])]}function m(e){var t,n,r,o,i=e.defaultValue,l=e.queryString,u=void 0!==l&&l,c=e.groupId,m=p(e),v=(0,a.useState)((function(){return function(e){var t,n=e.defaultValue,r=e.tabValues;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+r.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var a=null!=(t=r.find((function(e){return e.default})))?t:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:i,tabValues:m})})),h=v[0],g=v[1],b=f({queryString:u,groupId:c}),y=b[0],k=b[1],w=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:c}.groupId),n=(0,s.Nk)(t),r=n[0],o=n[1],[r,(0,a.useCallback)((function(e){t&&o.set(e)}),[t,o])]),S=w[0],D=w[1],x=function(){var e=null!=y?y:S;return d({value:e,tabValues:m})?e:null}();return(0,a.useLayoutEffect)((function(){x&&g(x)}),[x]),{selectedValue:h,selectValue:(0,a.useCallback)((function(e){if(!d({value:e,tabValues:m}))throw new Error("Can't select invalid tab value="+e);g(e),k(e),D(e)}),[k,D,m]),tabValues:m}}var v=n(2466),h=n(2389),g="tabList__CuJ",b="tabItem_LNqP";function y(e){var t=e.className,n=e.block,i=e.selectedValue,l=e.selectValue,u=e.tabValues,s=[],c=(0,v.o5)().blockElementScrollPositionUntilNextRender,p=function(e){var t=e.currentTarget,n=s.indexOf(t),r=u[n].value;r!==i&&(c(t),l(r))},d=function(e){var t,n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":var r,a=s.indexOf(e.currentTarget)+1;n=null!=(r=s[a])?r:s[0];break;case"ArrowLeft":var o,i=s.indexOf(e.currentTarget)-1;n=null!=(o=s[i])?o:s[s.length-1]}null==(t=n)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((function(e){var t=e.value,n=e.label,l=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:function(e){return s.push(e)},onKeyDown:d,onClick:p},l,{className:(0,o.Z)("tabs__item",b,null==l?void 0:l.className,{"tabs__item--active":i===t})}),null!=n?n:t)})))}function k(e){var t=e.lazy,n=e.children,r=e.selectedValue,o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var i=o.find((function(e){return e.props.value===r}));return i?(0,a.cloneElement)(i,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r})})))}function w(e){var t=m(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",g)},a.createElement(y,(0,r.Z)({},e,t)),a.createElement(k,(0,r.Z)({},e,t)))}function S(e){var t=(0,h.Z)();return a.createElement(w,(0,r.Z)({key:String(t)},e))}},7013:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),i=(n(9960),n(4866),n(5162),n(4996),["components"]),l={toc_min_heading_level:2,toc_max_heading_level:3},u="Doc Strings",s={unversionedId:"doc-strings",id:"doc-strings",title:"Doc Strings",description:"Since v2.9.0",source:"@site/docs/17-doc-strings.mdx",sourceDirName:".",slug:"/doc-strings",permalink:"/docs/doc-strings",draft:!1,editUrl:"https://github.com/gwen-interpreter/gwen-interpreter.github.io/edit/master/docs/17-doc-strings.mdx",tags:[],version:"current",sidebarPosition:17,frontMatter:{toc_min_heading_level:2,toc_max_heading_level:3},sidebar:"tutorialSidebar",previous:{title:"Assertions",permalink:"/docs/assertions"},next:{title:"Data Tables",permalink:"/docs/data-tables"}},c={},p=[{value:"Doc Strings as parameters to StepDefs",id:"doc-strings-as-parameters-to-stepdefs",level:4},{value:"Multiline Text",id:"multiline-text",level:2},{value:"JavaScript Function Bindings",id:"javascript-function-bindings",level:2},{value:"Sample Reports",id:"sample-reports",level:2}],d={toc:p};function f(e){var t=e.components,l=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"doc-strings"},"Doc Strings"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Since ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/releases/tag/v2.0.0"},"v2.9.0"))),(0,o.kt)("p",null,"Every step in the Gwen DSL that includes a string literal parameter surrounded by quotes at the end of the step expression can accept a ",(0,o.kt)("a",{parentName:"p",href:"https://docs.cucumber.io/gherkin/reference/#doc-strings"},"Doc String")," value."),(0,o.kt)("h4",{id:"doc-strings-as-parameters-to-stepdefs"},"Doc Strings as parameters to StepDefs"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"As of gwen-web v2.53.0 (gwen core v2.34.0), Doc strings can also be passed as parameters to DSL steps and StepDefs too. If the Doc String contains a multi-line value then it can only be passed to parameters that are declared in the Doc-string-able position (that is: string parameters surrounded by quotes declared at the end of the step expression).")),(0,o.kt)("p",null,"This is handy when you want to specify a multiline string literal as the last parameter to a step."),(0,o.kt)("p",null,"Some examples follow.."),(0,o.kt)("h2",{id:"multiline-text"},"Multiline Text"),(0,o.kt)("p",null,"One use case is multiline strings. In the absence of Doc Strings there was no way to pass in multiline strings or paragraphs of text. You can now do this as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},'  Given my paragraph is\n       """\n       Gwen is a Gherkin interpreter with built-in automation capabilities that can readily be \n       utilised for end-to-end testing and robotic processing. Automation is achieved through \n       Gherkin bindings called meta specs, composed with the Gwen DSL and maintained alongside \n       your feature files. An embedded Selenium engine executes scenarios according to the meta \n       you provide to perform operations in browsers for you.\n       """\n')),(0,o.kt)("h2",{id:"javascript-function-bindings"},"JavaScript Function Bindings"),(0,o.kt)("p",null,"Doc Strings can also be used to define Multi-line JavaScript functions."),(0,o.kt)("p",null,"For example, consider the following script that returns the current date in yyyy-mm-dd format."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"() => {\n  var d = new Date();\n  var year = d.getFullYear();\n  var month = ('0' + (d.getMonth() + 1)).slice(-2);\n  var day = ('0' + d.getDate()).slice(-2);\n  return year + '-' + month + '-' + day;\n}\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See also: ",(0,o.kt)("a",{parentName:"p",href:"/docs/js-functions"},"arrow syntax")," as a preferred alternative to anonymous function wrappers")),(0,o.kt)("p",null,"In the absence of Doc Strings, you would have to compact this to a one-liner expression and use it as follows (which is inelegant and hard to read):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},"  Given the current date is defined by javascript \"() => { var d = new Date(); var year = d.getFullYear(); var month = ('0' + (d.getMonth() + 1)).slice(-2); var day = ('0' + d.getDate()).slice(-2); return year + '-' + month + '-' + day; };\"\n")),(0,o.kt)("p",null,"With Doc Strings, you can now do this as follows instead:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},"  Given the current date is defined by javascript\n        \"\"\"\n        () => {\n          var d = new Date();\n          var year = d.getFullYear();\n          var month = ('0' + (d.getMonth() + 1)).slice(-2);\n          var day = ('0' + d.getDate()).slice(-2);\n          return year + '-' + month + '-' + day;\n        }\n        \"\"\"\n")),(0,o.kt)("h2",{id:"sample-reports"},"Sample Reports"),(0,o.kt)("p",null,"The javascript Doc String in this report includes the optional ",(0,o.kt)("inlineCode",{parentName:"p"},"JavaScript")," content type annotation at the opening triple quotes",(0,o.kt)("inlineCode",{parentName:"p"},'"""'),". Currently, Gwen just renders this literal in grey, but could in future use it for syntax highlighting."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Doc Strings in reports",src:n(5267).Z,width:"1536",height:"646"})))}f.isMDXComponent=!0},5267:function(e,t,n){t.Z=n.p+"assets/images/doc-strings-in-reports-9008084169c3d85ea31e0fb60a296057.png"}}]);