"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3782],{3887:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>u,default:()=>j,frontMatter:()=>h,metadata:()=>i,toc:()=>x});const i=JSON.parse('{"id":"introduction","title":"Introduction","description":"<ThemedImage","source":"@site/docs/01-introduction.mdx","sourceDirName":".","slug":"/","permalink":"/docs/","draft":false,"unlisted":false,"editUrl":"https://github.com/gwen-interpreter/gwen-interpreter.github.io/edit/master/docs/01-introduction.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"slug":"/","toc_min_heading_level":2,"toc_max_heading_level":4},"sidebar":"tutorialSidebar","next":{"title":"Get Started","permalink":"/docs/get-started"}}');var s=t(4848),r=t(8453),l=t(6289),a=t(5537),o=t(9329),d=t(9030),c=t(9324);const h={slug:"/",toc_min_heading_level:2,toc_max_heading_level:4},u="Introduction",p={},x=[{value:"Key features",id:"key-features",level:2},{value:"Usage",id:"usage",level:2},{value:"Declare features",id:"declare-features",level:3},{value:"Compose meta",id:"compose-meta",level:3},{value:"Declaring step definitions",id:"declaring-step-definitions",level:4},{value:"Web element selectors",id:"web-element-selectors",level:4},{value:"Navigating to a web page",id:"navigating-to-a-web-page",level:4},{value:"Accessing externalised properties",id:"accessing-externalised-properties",level:4},{value:"Checking the page title",id:"checking-the-page-title",level:4},{value:"Verifying that an element is empty",id:"verifying-that-an-element-is-empty",level:4},{value:"Processing records in data tables",id:"processing-records-in-data-tables",level:4},{value:"Passing parameters to StepDefs",id:"passing-parameters-to-stepdefs",level:4},{value:"Verifying that an element is displayed",id:"verifying-that-an-element-is-displayed",level:4},{value:"Behavioural rules and semantics",id:"behavioural-rules-and-semantics",level:4},{value:"Associative meta",id:"associative-meta",level:4},{value:"Launch Gwen",id:"launch-gwen",level:3},{value:"Invoke Gwen",id:"invoke-gwen",level:4}];function m(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,s.jsx)("p",{children:(0,s.jsx)(c.A,{alt:"Gwen logo",sources:{light:(0,d.Ay)("/img/gwen-logo-c.png"),dark:(0,d.Ay)("/img/gwen-logo-w.png")},width:"250px"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Gwen = [G]iven [W]hen Th[en]"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Gwen is a ",(0,s.jsx)(n.a,{href:"https://cucumber.io/docs/gherkin/reference/",children:"Gherkin"})," interpreter with built-in automation capabilities that can readily be utilised for end-to-end testing and robotic processing. Automation is achieved through Gherkin bindings in ",(0,s.jsx)(n.a,{href:"/docs/meta",children:"meta"})," specs, composed with the ",(0,s.jsx)(n.a,{href:"/docs/dsl",children:"Gwen DSL"})," and maintained alongside your feature files. An embedded ",(0,s.jsx)(n.a,{href:"https://www.selenium.dev/",children:"Selenium"})," engine executes scenarios according to the meta you provide to perform ",(0,s.jsx)(n.a,{href:"/docs/dsl#actions",children:"operations"})," in browsers for you."]}),"\n",(0,s.jsx)(n.h2,{id:"key-features",children:"Key features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Fully ",(0,s.jsx)(n.a,{href:"https://cucumber.io/docs/gherkin/reference/",children:"Gherkin"})," compliant interpreter"]}),"\n",(0,s.jsxs)(n.li,{children:["Composable ",(0,s.jsx)(n.a,{href:"/docs/meta#stepdefs",children:"step definitions"})]}),"\n",(0,s.jsxs)(n.li,{children:["Quick ",(0,s.jsx)(n.a,{href:"/docs/get-started",children:"project setup"})," with NPM"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/parallel",children:"Parallel"})," and ",(0,s.jsx)(n.a,{href:"/docs/dry-run",children:"dry run"})," execution"]}),"\n",(0,s.jsxs)(n.li,{children:["Interactive ",(0,s.jsx)(n.a,{href:"/docs/repl",children:"REPL"})," console"]}),"\n",(0,s.jsxs)(n.li,{children:["Configurable ",(0,s.jsx)(n.a,{href:"/docs/settings",children:"settings"})," and launch ",(0,s.jsx)(n.a,{href:"/docs/profiles",children:"profiles"})]}),"\n",(0,s.jsxs)(n.li,{children:["Multiple web element ",(0,s.jsx)(n.a,{href:"/docs/dsl#element-locators",children:"locator mechanisms"})," (including JS)"]}),"\n",(0,s.jsxs)(n.li,{children:["JavaScript ",(0,s.jsx)(n.a,{href:"/docs/dsl#js-bindings",children:"function bindings"})]}),"\n",(0,s.jsxs)(n.li,{children:["Multiple ",(0,s.jsx)(n.a,{href:"/docs/reports/html",children:"report formats"})]}),"\n",(0,s.jsxs)(n.li,{children:["Multi platform (Windows, Linux and ",(0,s.jsx)(n.a,{href:"/docs/docker",children:"Docker"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"Frequently asked questions",type:"info",children:(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.a,{href:"/docs/faq",children:"Gwen FAQ"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.h3,{id:"declare-features",children:"Declare features"}),"\n",(0,s.jsx)("p",{children:(0,s.jsx)("img",{src:"/img/icon-feature.png",width:"175px",height:"175px"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Declare ",(0,s.jsx)(n.a,{href:"https://cucumber.io/docs/gherkin/reference/",children:"feature specs"})," to describe how scenarios should ",(0,s.jsx)(n.a,{href:"https://cucumber.io/docs/bdd/better-gherkin/",children:"behave"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Feature specs are used to communicate scenarios in the language of your domain. They should be clear, concise and declarative."}),"\n",(0,s.jsx)(n.admonition,{title:"Keep features declarative",type:"tip",children:(0,s.jsx)("p",{children:"Write feature specs without giving any thought to automation."})}),"\n",(0,s.jsx)(n.p,{children:"For example, the following describes how adding items to a todo list should behave."}),"\n",(0,s.jsx)(n.admonition,{title:"Feature Spec",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"File: gwen/features/todo.feature"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",children:"Feature: Add todo items\n \n  Scenario: Create todo list\n    Given a new todo list\n     When the following items are added\n          | Item          |\n          | Get the milk  |\n          | Walk the dog  |\n     Then the list will contain 2 items\n"})})]})}),"\n",(0,s.jsx)(n.h3,{id:"compose-meta",children:"Compose meta"}),"\n",(0,s.jsx)("p",{children:(0,s.jsx)("img",{src:"/img/icon-meta.png",width:"175px",height:"175px"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Compose ",(0,s.jsx)(n.a,{href:"/docs/meta",children:"meta specs"})," to describe how scenarios will execute."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Meta specs are used to describe execution and are written in Gherkin too. ",(0,s.jsx)(n.a,{href:"/docs/meta#stepdefs",children:"Step definitions"})," and ",(0,s.jsx)(n.a,{href:"/docs/dsl#bindings",children:"bindings"})," are defined in meta so your features remain clean and unconcerned with automation details."]}),"\n",(0,s.jsx)(n.admonition,{title:"Meta is necessarily imperative",type:"tip",children:(0,s.jsx)("p",{children:"Write meta specs with execution and automation in mind."})}),"\n",(0,s.jsxs)(n.p,{children:["For example, the following meta describes how each step in the scenario above can be executed to automate a test against a running ",(0,s.jsx)(n.a,{href:"https://todomvc.com/examples/react/dist",children:"todo application"}),"."]}),"\n",(0,s.jsx)(n.admonition,{title:"Meta Spec",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"File: gwen/features/todo.meta"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",children:'Feature: Todo Meta\n  \n  @Context\n  @StepDef\n  Scenario: a new todo list\n    Given my todo list can be located by css ".todo-list"\n     When I navigate to "${todo.page.url}"\n     Then the page title should contain "TodoMVC"\n      And my todo list should be empty\n  \n  @Action\n  @DataTable\n  @ForEach\n  @StepDef\n  Scenario: the following items are added\n    Given the todo field can be located by class "new-todo"\n     When I enter Item in the todo field\n     Then my todo list should contain Item\n  \n  @Assertion\n  @StepDef\n  Scenario: the list will contain <expected-count> items\n    Given the item count can be located by css ".todo-count"\n     Then the item count should contain "$<expected-count>"\n      And my todo list should be displayed\n'})})]})}),"\n",(0,s.jsx)(n.h4,{id:"declaring-step-definitions",children:"Declaring step definitions"}),"\n",(0,s.jsxs)(n.p,{children:["Each step definition is declared as a ",(0,s.jsx)(n.code,{children:"@StepDef"})," annotated scenario with a name that matches that of the step in the feature it binds to. Each one calls out to one or more ",(0,s.jsx)(n.a,{href:"/docs/dsl",children:"DSL Steps"})," (or potentially other StepDefs) in its body to perform the specified operations at run time."]}),"\n",(0,s.jsx)(n.p,{children:"The first StepDef in our meta example binds to the first step in the feature and will only execute when it is interpreted for execution by Gwen."}),"\n",(0,s.jsx)(n.admonition,{title:"Feature Step 1",type:"note",children:(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",children:"  Given a new todo list\n"})})})}),"\n",(0,s.jsx)(n.admonition,{title:"StepDef 1",type:"note",children:(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",metastring:"{2-3}",children:'  @Context\n  @StepDef\n  Scenario: a new todo list\n    Given my todo list can be located by css ".todo-list"\n     When I navigate to "${todo.page.url}"\n     Then the page title should contain "TodoMVC"\n      And my todo list should be empty\n'})})})}),"\n",(0,s.jsx)(n.h4,{id:"web-element-selectors",children:"Web element selectors"}),"\n",(0,s.jsxs)(n.p,{children:["The first thing the above will do is bind the selector for locating the todo list element on the web page to the name ",(0,s.jsx)(n.code,{children:"my todo list"}),". Later steps can then reference that element using this name to interact with it and Gwen will locate it dynamically."]}),"\n",(0,s.jsx)(n.admonition,{title:"StepDef 1, Step 1",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",children:'  Given my todo list can be located by css ".todo-list"\n'})}),(0,s.jsx)(n.p,{children:"Calls DSL step:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/dsl#element-can-be-located-by-selector-expression",children:(0,s.jsx)(n.code,{children:'<element> can be located by <selector> "<expression>"'})})}),"\n"]})]})}),"\n",(0,s.jsx)("p",{}),"\n",(0,s.jsx)(n.h4,{id:"navigating-to-a-web-page",children:"Navigating to a web page"}),"\n",(0,s.jsxs)(n.p,{children:["The next step in this StepDef will open a new browser window and navigate to the URL in the ",(0,s.jsx)(n.code,{children:"todo.page.url"})," property."]}),"\n",(0,s.jsx)(n.admonition,{title:"StepDef 1, Step 2",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",children:'  When I navigate to "${todo.page.url}"\n'})}),(0,s.jsx)(n.p,{children:"Calls DSL step:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/dsl#i-navigate-to-url",children:(0,s.jsx)(n.code,{children:'I navigate to "<url>"'})})}),"\n"]})]})}),"\n",(0,s.jsx)("p",{}),"\n",(0,s.jsx)(n.h4,{id:"accessing-externalised-properties",children:"Accessing externalised properties"}),"\n",(0,s.jsxs)(n.p,{children:["We could have just hard coded the ",(0,s.jsx)(n.a,{href:"https://todomvc.com/examples/react/dist",children:"https://todomvc.com/examples/react/dist"})," URL in the above step, but externalising it enables us to target different environments through ",(0,s.jsx)(n.a,{href:"/docs/string-interpolation",children:"string interpolation"})," without changing our meta. This is useful during development when you want to execute against a locally running instance of the application or during testing when it is running on a different host or port. With this approach you can define a ",(0,s.jsx)(n.a,{href:"/docs/settings",children:"settings"})," file per environment and assign the URL for that environment to the ",(0,s.jsx)(n.code,{children:"todo.page.url"})," property in each file. Then when you want to target an environment, you pass the settings file for that environment to Gwen and the URL will be resolved accordingly."]}),"\n",(0,s.jsxs)(a.A,{groupId:"settings",defaultValue:"conf",values:[{label:"conf",value:"conf"},{label:"json",value:"json"},{label:"properties",value:"properties"}],children:[(0,s.jsx)(o.A,{value:"conf",children:(0,s.jsx)(n.admonition,{title:"Conf",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"File: gwen/conf/env/test.conf"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'todo {\n  page {\n    url = "https://todomvc.com/examples/react/dist"\n  }\n}\n'})})]})})}),(0,s.jsx)(o.A,{value:"json",children:(0,s.jsx)(n.admonition,{title:"Json",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"File: gwen/conf/env/test.json"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "todo": {\n    "page": {\n      "url": "https://todomvc.com/examples/react/dist"\n    }\n  }\n}\n'})})]})})}),(0,s.jsx)(o.A,{value:"properties",children:(0,s.jsx)(n.admonition,{title:"Properties",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"File: gwen/conf/test.properties"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-properties",children:"  todo.page.url = https://todomvc.com/examples/react/dist\n"})})]})})})]}),"\n",(0,s.jsx)(n.h4,{id:"checking-the-page-title",children:"Checking the page title"}),"\n",(0,s.jsx)(n.p,{children:'The next step in the same StepDef checks that the page title in the browser window contains the string literal "TodoMVC" in it. If it doesn\'t then an assertion error will be raised, otherwise execution will resume to the next step. It is generally a good idea when navigating to a page to verify that you did indeed land on that page before proceeding to interact with it. Checking the title is one way to do it which will suffice in this case.'}),"\n",(0,s.jsx)(n.admonition,{title:"StepDef 1, Step 3",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",children:'  Then the page title should contain "TodoMVC"\n'})}),(0,s.jsx)(n.p,{children:"Calls DSL step:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/dsl#the-page-title-should-match-expression",children:(0,s.jsx)(n.code,{children:'the page title should[ not] <match> "<expression>"'})})}),"\n"]})]})}),"\n",(0,s.jsx)("p",{}),"\n",(0,s.jsx)(n.h4,{id:"verifying-that-an-element-is-empty",children:"Verifying that an element is empty"}),"\n",(0,s.jsxs)(n.p,{children:["The last step in this StepDef verifies that the web element containing the current list of todo items is empty. We expect this because we haven't added any items to it yet. Recall that we bound this element in the first step earlier to the name ",(0,s.jsx)(n.code,{children:"my todo list"}),". So here we reference it by that name and if Gwen sees that is is empty then execution will resume, otherwise an assertion error will be raised."]}),"\n",(0,s.jsx)(n.admonition,{title:"StepDef 1, Step 4",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",children:"  And my todo list should be empty\n"})}),(0,s.jsx)(n.p,{children:"Calls DSL step:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/dsl#element-should-be-state",children:(0,s.jsx)(n.code,{children:"<element> should[ not] be <state>"})})}),"\n"]})]})}),"\n",(0,s.jsx)("p",{}),"\n",(0,s.jsx)(n.h4,{id:"processing-records-in-data-tables",children:"Processing records in data tables"}),"\n",(0,s.jsxs)(n.p,{children:["The second StepDef uses the ",(0,s.jsx)(n.code,{children:"@DataTable"})," and ",(0,s.jsx)(n.code,{children:"@ForEach"})," annotations which work together to process each record in the ",(0,s.jsx)(n.a,{href:"/docs/data-tables",children:"data table"})," of the second step in the feature."]}),"\n",(0,s.jsx)(n.admonition,{title:"Feature Step 2",type:"note",children:(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",children:"  When the following items are added\n       | Item          |\n       | Get the milk  |\n       | Walk the dog  |\n"})})})}),"\n",(0,s.jsx)(n.admonition,{title:"StepDef 2",type:"note",children:(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",metastring:"{3-5}",children:'  @Action\n  @DataTable\n  @ForEach\n  @StepDef\n  Scenario: the following items are added\n    Given the todo field can be located by class "new-todo"\n     When I enter Item in the todo field\n     Then my todo list should contain Item\n'})})})}),"\n",(0,s.jsxs)(n.p,{children:["Gwen will call the StepDef for each record in the table and bind each field value to its declared name in the header record. The second and third steps in this StepDef will enter each ",(0,s.jsx)(n.code,{children:"Item"})," into the ",(0,s.jsx)(n.code,{children:"todo field"})," and check that it was added to ",(0,s.jsx)(n.code,{children:"my todo list"}),". This is the same ",(0,s.jsx)(n.code,{children:"my todo list"})," that we earlier confirmed was absent when we opened the page in the browser. We reuse it here to check that it now contains and displays each item. If it does not, then an assertion error will be raised."]}),"\n",(0,s.jsx)(n.admonition,{title:"StepDef 2, Steps 2 and 3",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",children:"  When I enter Item in the todo field\n  Then my todo list should contain Item\n"})}),(0,s.jsx)(n.p,{children:"Calls DSL steps:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/dsl#i-enter-or-type-text-ref-in-element",children:(0,s.jsx)(n.code,{children:"I <enter|type> <textRef> in <element>"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/dsl#element-should-match-expression-ref",children:(0,s.jsx)(n.code,{children:"<element> should[ not] <match> <expressionRef>"})})}),"\n"]})]})}),"\n",(0,s.jsx)("p",{}),"\n",(0,s.jsx)(n.h4,{id:"passing-parameters-to-stepdefs",children:"Passing parameters to StepDefs"}),"\n",(0,s.jsxs)(n.p,{children:["The last StepDef accepts the number of expected items from the last step in the feature into a parameter placeholder named ",(0,s.jsx)(n.code,{children:"expected-count"})," and then uses that to assert its value against ",(0,s.jsx)(n.code,{children:"the item count"})," on the page. In this example, the value 2 will be passed as the parameter."]}),"\n",(0,s.jsx)(n.admonition,{title:"Feature Step 3",type:"note",children:(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",children:"  Then the list will contain 2 items\n"})})})}),"\n",(0,s.jsx)(n.admonition,{title:"StepDef 3",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",metastring:"{2-3,5}",children:'  @Assertion\n  @StepDef\n  Scenario: the list will contain <expected-count> items\n    Given the item count can be located by css ".todo-count"\n     Then the item count should contain "$<expected-count>"\n      And my todo list should be displayed\n'})}),(0,s.jsx)(n.p,{children:"Calls DSL step:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/dsl#element-should-match-expression",children:(0,s.jsx)(n.code,{children:'<element> should[ not] <match> "<expression>"'})})}),"\n"]})]})}),"\n",(0,s.jsx)(n.h4,{id:"verifying-that-an-element-is-displayed",children:"Verifying that an element is displayed"}),"\n",(0,s.jsx)(n.p,{children:"Lastly, the final step in this StepDef verifies that the web element containing the current list of todo items is displayed (which it should be after items have been added)."}),"\n",(0,s.jsx)(n.admonition,{title:"StepDef 3, Step 3",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",children:"  And my todo list should be displayed\n"})}),(0,s.jsx)(n.p,{children:"Calls DSL step:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/dsl#element-should-be-state",children:(0,s.jsx)(n.code,{children:"<element> should[ not] be <state>"})})}),"\n"]})]})}),"\n",(0,s.jsx)(n.h4,{id:"behavioural-rules-and-semantics",children:"Behavioural rules and semantics"}),"\n",(0,s.jsxs)(n.p,{children:["The following annotations on StepDefs are used to associate behaviour types and enforce the following rules when the ",(0,s.jsx)(n.a,{href:"/docs/settings#gwen-behavior-rules",children:(0,s.jsx)(n.code,{children:"gwen.behavior.rules"})})," setting is set to ",(0,s.jsx)(n.code,{children:"strict"}),"."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"StepDefs annotated with.."}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"can only bind steps tied to keyword.."}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"because.."})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"@Context "})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Given"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Givens imply context"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"@Action"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"When"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Whens imply actions"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"@Assertion"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Then"}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Thens imply assertions"})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["When binding to a step declared with ",(0,s.jsx)(n.code,{children:"And"}),", ",(0,s.jsx)(n.code,{children:"But"}),", or ",(0,s.jsx)(n.code,{children:"*"}),", then the keyword in the first step in the chain of preceeding steps declared with either ",(0,s.jsx)(n.code,{children:"Given"}),", ",(0,s.jsx)(n.code,{children:"When"})," or ",(0,s.jsx)(n.code,{children:"Then"})," will become the tying keyword. Should the topmost step in a chain be declared with ",(0,s.jsx)(n.code,{children:"*"}),", then the tying keyword will be ",(0,s.jsx)(n.code,{children:"Given"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, the following binding will be permitted since the feature step is declared with the ",(0,s.jsx)(n.code,{children:"Then"})," keyword and the StepDef is annotated with ",(0,s.jsx)(n.code,{children:"@Assertion"}),"."]}),"\n",(0,s.jsx)(n.admonition,{title:"Feature Step 3",type:"note",children:(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",children:"  Then the list will contain 2 items\n"})})})}),"\n",(0,s.jsx)(n.admonition,{title:"StepDef 3",type:"note",children:(0,s.jsx)("p",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-gherkin",metastring:"{1}",children:'  @Assertion\n  @StepDef\n  Scenario: the list will contain <expected-count> items\n    Given the item count can be located by css ".todo-count"\n     Then the item count should contain "$<expected-count>"\n      And my todo list should be displayed\n'})})})}),"\n",(0,s.jsxs)(n.p,{children:["If we were to change the keyword in the feature step to ",(0,s.jsx)(n.code,{children:"When"})," however, it would not only read poorly but would no longer imply ",(0,s.jsx)(n.code,{children:"@Assertion"})," behaviour and Gwen would report the violation. Similarly, if we were to change the behaviour annotation on the StepDef to ",(0,s.jsx)(n.code,{children:"@Context"}),", then that behaviour would not be implied by the ",(0,s.jsx)(n.code,{children:"Then"})," keyword declared in the feature step."]}),"\n",(0,s.jsx)(n.admonition,{title:"Strict by default",type:"info",children:(0,s.jsx)("p",{children:(0,s.jsxs)(n.p,{children:["Strict rules are enabled by default since ",(0,s.jsx)(l.A,{to:"https://github.com/gwen-interpreter/gwen-web/releases/tag/v3.0.0",children:"v3.0.0"}),". In prior versions, lenient was the default, meaning that these and other rules like ",(0,s.jsx)("b",{children:"Given-When-Then"})," order were not enforced."]})})}),"\n",(0,s.jsx)(n.h4,{id:"associative-meta",children:"Associative meta"}),"\n",(0,s.jsx)(n.p,{children:"Gwen will automatically associate and bind all same named feature and meta files discovered in a directory with each other. In the following case, the meta would be considered associative."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"features/todo.feature\nfeatures/todo.meta\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)("p",{children:(0,s.jsxs)(n.p,{children:["Associative meta discovery is always enabled as of ",(0,s.jsx)(l.A,{to:"/docs/gwen4",children:"Gwen 4"}),". In prior versions, it was enabled by default and could be turned off."]})})}),"\n",(0,s.jsx)(n.h3,{id:"launch-gwen",children:"Launch Gwen"}),"\n",(0,s.jsx)("p",{children:(0,s.jsxs)(n.p,{children:["\xa0 \xa0 \xa0 \xa0 ",(0,s.jsx)(c.A,{alt:"Gwen attractor",sources:{light:(0,d.Ay)("/img/gwen-attractor-c.png"),dark:(0,d.Ay)("/img/gwen-attractor-w.png")},class:"100px",height:"100px"})]})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Launch Gwen to bind your meta and execute your features to automate scenarios."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"invoke-gwen",children:"Invoke Gwen"}),"\n",(0,s.jsx)(n.p,{children:"When launched on a directory, Gwen will recursively discover and bind all meta and feature files in that directory and execute all the features."}),"\n",(0,s.jsxs)(n.admonition,{title:"Set default environment",type:"note",children:[(0,s.jsxs)(n.p,{children:["Set the default target environment to ",(0,s.jsx)(n.code,{children:"test"})," by updating the ",(0,s.jsx)(n.a,{href:"/docs/settings#gwen-target-env",children:(0,s.jsx)(n.code,{children:"gwen.target.env"})})," setting in the ",(0,s.jsx)(n.code,{children:"gwen.conf"})," file in the project root. This will ensure that all settings in the ",(0,s.jsx)("code",{children:"conf/env/test.conf"})," file are loaded when Gwen is launched and that all ",(0,s.jsx)(n.code,{children:"${prop.name}"})," placeholder references throughout all meta and feature files are resolved."]}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"File: gwen.conf"})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:"{3}",children:'  gwen {\n    target {\n      env  = "test"\n    }\n  }\n'})}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/settings",children:"Settings"})})]}),"\n",(0,s.jsxs)(a.A,{groupId:"jstool",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"npm",value:"npm"},{label:"pnpm",value:"pnpm"}],children:[(0,s.jsx)(o.A,{value:"yarn",children:(0,s.jsx)(n.admonition,{title:"Launch Gwen",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsxs)(n.p,{children:["Quick setup (see ",(0,s.jsx)(n.a,{href:"/docs/get-started",children:"getting started"}),")"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"  yarn add -D @gweninterpreter/gwen-web\n  yarn gwen init\n"})}),(0,s.jsxs)(n.p,{children:["Execute the feature passing in the ",(0,s.jsx)(l.A,{to:"docs/launcher#gwen-launch-options-batch",children:(0,s.jsx)("code",{children:"-b"})})," option to exit when done:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"  yarn gwen -b gwen/features/todo.feature\n"})}),(0,s.jsxs)(n.p,{children:["Or execute all features in the ",(0,s.jsx)("i",{children:"gwen/features"})," directory"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"  yarn gwen -b gwen/features\n"})}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/launcher",children:"Gwen Launcher"})})]})})}),(0,s.jsx)(o.A,{value:"npm",children:(0,s.jsx)(n.admonition,{title:"Launch Gwen",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsxs)(n.p,{children:["Quick setup (see ",(0,s.jsx)(n.a,{href:"/docs/get-started",children:"getting started"}),")"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"  npm i --save-dev @gweninterpreter/gwen-web\n  npm run gwen init\n"})}),(0,s.jsxs)(n.p,{children:["Execute the feature passing in the ",(0,s.jsx)(l.A,{to:"docs/launcher#gwen-launch-options-batch",children:(0,s.jsx)("code",{children:"-b"})})," option to exit when done:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"  npm run gwen -- -b gwen/features/todo.feature\n"})}),(0,s.jsxs)(n.p,{children:["Or execute all features in the ",(0,s.jsx)("i",{children:"gwen/features"})," directory"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"  npm run gwen -- -b gwen/features\n"})}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/launcher",children:"Gwen Launcher"})})]})})}),(0,s.jsx)(o.A,{value:"pnpm",children:(0,s.jsx)(n.admonition,{title:"Launch Gwen",type:"note",children:(0,s.jsxs)("p",{children:[(0,s.jsxs)(n.p,{children:["Quick setup (see ",(0,s.jsx)(n.a,{href:"/docs/get-started",children:"getting started"}),")"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"  pnpm add -D @gweninterpreter/gwen-web\n  pnpm gwen init\n"})}),(0,s.jsxs)(n.p,{children:["Execute the feature passing in the ",(0,s.jsx)(l.A,{to:"docs/launcher#gwen-launch-options-batch",children:(0,s.jsx)("code",{children:"-b"})})," option to exit when done:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"  pnpm gwen -b gwen/features/todo.feature\n"})}),(0,s.jsxs)(n.p,{children:["Or execute all features in the ",(0,s.jsx)("i",{children:"gwen/features"})," directory"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"  pnpm gwen -b gwen/features\n"})}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/launcher",children:"Gwen Launcher"})})]})})})]}),"\n",(0,s.jsx)(n.admonition,{title:"Testing & Robotics",type:"tip",children:(0,s.jsx)("p",{children:(0,s.jsx)(n.p,{children:"Your Gwen usage need not be confined to just testing. You can automate manually intensive and repetitive processes too!"})})})]})}function j(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},9329:(e,n,t)=>{t.d(n,{A:()=>l});t(6540);var i=t(4164);const s={tabItem:"tabItem_Ymn6"};var r=t(4848);function l(e){let{children:n,hidden:t,className:l}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(s.tabItem,l),hidden:t,children:n})}},5537:(e,n,t)=>{t.d(n,{A:()=>v});var i=t(6540),s=t(4164),r=t(5627),l=t(6347),a=t(372),o=t(604),d=t(1861),c=t(8749);function h(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:s}}=e;return{value:n,label:t,attributes:i,default:s}}))}(t);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const s=(0,l.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=u(e),[l,o]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:r}))),[d,h]=x({queryString:t,groupId:s}),[m,j]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,c.Dv)(t);return[s,(0,i.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),g=(()=>{const e=d??m;return p({value:e,tabValues:r})?e:null})();(0,a.A)((()=>{g&&o(g)}),[g]);return{selectedValue:l,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),j(e)}),[h,j,r]),tabValues:r}}var j=t(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(4848);function w(e){let{className:n,block:t,selectedValue:i,selectValue:l,tabValues:a}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.a_)(),c=e=>{const n=e.currentTarget,t=o.indexOf(n),s=a[t].value;s!==i&&(d(n),l(s))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:a.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>{o.push(e)},onKeyDown:h,onClick:c,...r,className:(0,s.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function b(e){let{lazy:n,children:t,selectedValue:r}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=m(e);return(0,f.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,f.jsx)(w,{...n,...e}),(0,f.jsx)(b,{...n,...e})]})}function v(e){const n=(0,j.A)();return(0,f.jsx)(y,{...e,children:h(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);