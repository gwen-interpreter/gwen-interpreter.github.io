"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[721],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(t),m=o,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return t?r.createElement(f,l(l({ref:n},u),{},{components:t})):r.createElement(f,l({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=p;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8215:function(e,n,t){t.d(n,{Z:function(){return o}});var r=t(7294);function o(e){var n=e.children,t=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:o},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return u}});var r=t(3117),o=t(7294),a=t(2389),l=t(9553),i=t(6010),c="tabItem_LplD";function s(e){var n,t,a,s=e.lazy,u=e.block,d=e.defaultValue,p=e.values,m=e.groupId,f=e.className,k=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=p?p:k.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),w=(0,l.lx)(g,(function(e,n){return e.value===n.value}));if(w.length>0)throw new Error('Docusaurus error: Duplicate values "'+w.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===d?d:null!=(n=null!=d?d:null==(t=k.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(a=k[0])?void 0:a.props.value;if(null!==v&&!g.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var h=(0,l.UB)(),b=h.tabGroupChoices,y=h.setTabGroupChoices,N=(0,o.useState)(v),j=N[0],D=N[1],O=[],C=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var x=b[m];null!=x&&x!==j&&g.some((function(e){return e.value===x}))&&D(x)}var S=function(e){var n=e.currentTarget,t=O.indexOf(n),r=g[t].value;r!==j&&(C(n),D(r),null!=m&&y(m,r))},E=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=O.indexOf(e.currentTarget)+1;t=O[r]||O[0];break;case"ArrowLeft":var o=O.indexOf(e.currentTarget)-1;t=O[o]||O[O.length-1]}null==(n=t)||n.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":u},f)},g.map((function(e){var n=e.value,t=e.label,a=e.attributes;return o.createElement("li",(0,r.Z)({role:"tab",tabIndex:j===n?0:-1,"aria-selected":j===n,key:n,ref:function(e){return O.push(e)},onKeyDown:E,onFocus:S,onClick:S},a,{className:(0,i.Z)("tabs__item",c,null==a?void 0:a.className,{"tabs__item--active":j===n})}),null!=t?t:n)}))),s?(0,o.cloneElement)(k.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},k.map((function(e,n){return(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==j})}))))}function u(e){var n=(0,a.Z)();return o.createElement(s,(0,r.Z)({key:String(n)},e))}},3350:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return d}});var r=t(3117),o=t(102),a=(t(7294),t(3905)),l=(t(9960),t(9877),t(8215),t(4996),["components"]),i={title:"Docker",toc_min_heading_level:2,toc_max_heading_level:3},c="Running Gwen in Docker",s={unversionedId:"docker",id:"docker",title:"Docker",description:"Sometimes it may be useful to run Gwen in a docker container. For example, if you want to run Gwen in a continuous delivery pipeline on a build server or node agent.",source:"@site/docs/12-docker.mdx",sourceDirName:".",slug:"/docker",permalink:"/docs/docker",editUrl:"https://github.com/gwen-interpreter/gwen-interpreter.github.io/edit/master/docs/12-docker.mdx",tags:[],version:"current",sidebarPosition:12,frontMatter:{title:"Docker",toc_min_heading_level:2,toc_max_heading_level:3},sidebar:"tutorialSidebar",previous:{title:"Implicit Attributes",permalink:"/docs/advanced/implicit-attributes"},next:{title:"Gwen 3 Release",permalink:"/docs/gwen3"}},u={},d=[{value:"Dockerfile",id:"dockerfile",level:2},{value:"Docker compose",id:"docker-compose",level:2},{value:"Selenoid configuration",id:"selenoid-configuration",level:2},{value:"Selenoid browsers file",id:"selenoid-browsers-file",level:3},{value:"Gwen settings file",id:"gwen-settings-file",level:3},{value:"Docker yarn script",id:"docker-yarn-script",level:2},{value:"Run in docker",id:"run-in-docker",level:2}],p={toc:d};function m(e){var n=e.components,t=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"running-gwen-in-docker"},"Running Gwen in Docker"),(0,a.kt)("p",null,"Sometimes it may be useful to run Gwen in a ",(0,a.kt)("a",{parentName:"p",href:"https://www.docker.com/"},"docker")," container. For example, if you want to run Gwen in a continuous delivery pipeline on a build server or node agent."),(0,a.kt)("h2",{id:"dockerfile"},"Dockerfile"),(0,a.kt)("p",null,"The first thing you need to do is find or create a suitable docker image for Gwen to run in. It will need to have Java 8+ and node 12+ installed on it (and optionally yarn)."),(0,a.kt)("p",null,"To build your own image:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a new file named ",(0,a.kt)("inlineCode",{parentName:"li"},"Dockerfile")," in the root of your Gwen project (",(0,a.kt)("a",{parentName:"li",href:"/docs/get-started"},"create a Gwen project")," if you don't have one).")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{2}","{2}":!0},"/project                    # Your project root\n\u2514\u2500\u2500 Dockerfile              # Docker imsage file\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Save the following content into the file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"FROM adoptopenjdk/openjdk8:ubi\n\n# install node & yarn\nRUN dnf module install nodejs:16 -y\nRUN npm install --global yarn\n")),(0,a.kt)("h2",{id:"docker-compose"},"Docker compose"),(0,a.kt)("p",null,"Next, we need to configure a ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file to create docker containers for Gwen and at least one web browser for it to run against. Here, we will use ",(0,a.kt)("a",{parentName:"p",href:"https://aerokube.com/selenoid/"},"Selenoid")," to stand up a chrome browser and Selenium grid that Gwen will connect to."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a new file named ",(0,a.kt)("inlineCode",{parentName:"li"},"docker-compose.yaml")," in the root of your Gwen project.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{3}","{3}":!0},"/project                    # Your JS project root\n\u251c\u2500\u2500 Dockerfile              # Docker imsage file\n\u2514\u2500\u2500 docker-compose.yml      # Docker compose YAML file\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Save the following content into the file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'version: \'3.5\'\nservices:\n  chrome:\n    image: "selenoid/chrome:latest"\n    networks:\n      - gwen-net\n  selenoid:\n    depends_on:\n      - chrome\n    image: "aerokube/selenoid:latest-release"\n    networks:\n      - gwen-net\n    ports:\n      - "4444:4444"\n    volumes:\n      - "$PWD/gwen/browsers:/etc/selenoid/:ro"\n      - "/var/run/docker.sock:/var/run/docker.sock"\n    command: -container-network gwen-net\n  gwen:\n    depends_on:\n      - selenoid\n    build:\n      context: .\n      dockerfile: Dockerfile\n    environment:\n      NO_COLOR: 1\n    volumes:\n      - "$PWD:/project"\n    working_dir: /project\n    command: yarn gwen:docker\n    networks:\n      - gwen-net\nnetworks:\n  gwen-net:\n    name: gwen-net\n')),(0,a.kt)("h2",{id:"selenoid-configuration"},"Selenoid configuration"),(0,a.kt)("h3",{id:"selenoid-browsers-file"},"Selenoid browsers file"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a ",(0,a.kt)("inlineCode",{parentName:"li"},"browsers.json")," file in the ",(0,a.kt)("inlineCode",{parentName:"li"},"gwen/browsers")," directory of your Gwen project.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{4}","{4}":!0},"/project                    # Your project root\n\u2514\u2500\u2500 /gwen                   # Gwen working directory\n    \u2514\u2500\u2500 browsers\n        \u2514\u2500\u2500browsers.json    # Selenoid browsers file\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Save the following content into the file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "chrome": {\n    "default": "latest",\n    "versions": {\n      "latest": {\n        "image": "selenoid/chrome:latest",\n        "port": "4444",\n        "path": "/"\n      }\n    }\n  }\n}\n')),(0,a.kt)("h3",{id:"gwen-settings-file"},"Gwen settings file"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a ",(0,a.kt)("inlineCode",{parentName:"li"},"selenoid.conf")," settings file in the ",(0,a.kt)("inlineCode",{parentName:"li"},"gwen/browsers")," directory of your Gwen project.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{5}","{5}":!0},"/project                    # Your project root\n\u2514\u2500\u2500 /gwen                   # Gwen working directory\n    \u2514\u2500\u2500 browsers\n        \u251c\u2500\u2500browsers.json    # Selenoid browsers file\n        \u2514\u2500\u2500selenoid.conf    # Selenoid Gwen settings\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Save the following content into the file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'gwen {\n  web {\n    remote {\n        url = "http://selenoid:4444/wd/hub"\n    }\n    capability {\n      enableVNC = false\n      enableVideo = false\n    \xa0 acceptSslCerts = true\n    }\n  }\n}\n')),(0,a.kt)("h2",{id:"docker-yarn-script"},"Docker yarn script"),(0,a.kt)("p",null,"Next, add the following ",(0,a.kt)("inlineCode",{parentName:"p"},"gwen:docker")," script to the ",(0,a.kt)("inlineCode",{parentName:"p"},"scripts")," section of the ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," file in your Gwen project, replacing ",(0,a.kt)("inlineCode",{parentName:"p"},"gwen/samples")," with the directory containing the features you want to execute.\nThis will be called by the ",(0,a.kt)("inlineCode",{parentName:"p"},"gwen")," container in docker when it starts (as per the ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file we created above)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:"{3}","{3}":!0},'"scripts": {\n  "gwen": "gwen",\n  "gwen:docker": "yarn install && gwen -b -c gwen/browsers/selenoid.conf gwen/samples"\n}\n')),(0,a.kt)("h2",{id:"run-in-docker"},"Run in docker"),(0,a.kt)("p",null,"Finally, ensure that your Docker engine is running on your machine and launch the following command to spin everything up and run Gwen in docker:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose run gwen\n")))}m.isMDXComponent=!0}}]);