"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4260],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(t),d=r,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||i;return t?a.createElement(f,l(l({ref:n},c),{},{components:t})):a.createElement(f,l({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=p;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:function(e,n,t){t.d(n,{Z:function(){return l}});var a=t(7294),r=t(4334),i="tabItem_Ymn6";function l(e){var n=e.children,t=e.hidden,l=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,l),hidden:t},n)}},4866:function(e,n,t){t.d(n,{Z:function(){return N}});var a=t(3117),r=t(7294),i=t(4334),l=t(6775),o=t(1980),s=t(7392),u=t(12);function c(e){return function(e){var n,t;return null!=(n=null==(t=r.Children.map(e,(function(e){if(!e||(0,r.isValidElement)(e)&&(n=e.props)&&"object"==typeof n&&"value"in n)return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}function m(e){var n=e.values,t=e.children;return(0,r.useMemo)((function(){var e=null!=n?n:c(t);return function(e){var n=(0,s.l)(e,(function(e,n){return e.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function d(e){var n=e.queryString,t=void 0!==n&&n,a=e.groupId,i=(0,l.k6)(),s=function(e){var n=e.queryString,t=void 0!==n&&n,a=e.groupId;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:t,groupId:a});return[(0,o._X)(s),(0,r.useCallback)((function(e){if(s){var n=new URLSearchParams(i.location.search);n.set(s,e),i.replace(Object.assign({},i.location,{search:n.toString()}))}}),[s,i])]}function f(e){var n,t,a,i,l=e.defaultValue,o=e.queryString,s=void 0!==o&&o,c=e.groupId,f=m(e),g=(0,r.useState)((function(){return function(e){var n,t=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}var r=null!=(n=a.find((function(e){return e.default})))?n:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:l,tabValues:f})})),h=g[0],b=g[1],k=d({queryString:s,groupId:c}),v=k[0],y=k[1],w=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:c}.groupId),t=(0,u.Nk)(n),a=t[0],i=t[1],[a,(0,r.useCallback)((function(e){n&&i.set(e)}),[n,i])]),N=w[0],C=w[1],_=function(){var e=null!=v?v:N;return p({value:e,tabValues:f})?e:null}();return(0,r.useLayoutEffect)((function(){_&&b(_)}),[_]),{selectedValue:h,selectValue:(0,r.useCallback)((function(e){if(!p({value:e,tabValues:f}))throw new Error("Can't select invalid tab value="+e);b(e),y(e),C(e)}),[y,C,f]),tabValues:f}}var g=t(2466),h=t(2389),b="tabList__CuJ",k="tabItem_LNqP";function v(e){var n=e.className,t=e.block,l=e.selectedValue,o=e.selectValue,s=e.tabValues,u=[],c=(0,g.o5)().blockElementScrollPositionUntilNextRender,m=function(e){var n=e.currentTarget,t=u.indexOf(n),a=s[t].value;a!==l&&(c(n),o(a))},p=function(e){var n,t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":var a,r=u.indexOf(e.currentTarget)+1;t=null!=(a=u[r])?a:u[0];break;case"ArrowLeft":var i,l=u.indexOf(e.currentTarget)-1;t=null!=(i=u[l])?i:u[u.length-1]}null==(n=t)||n.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},n)},s.map((function(e){var n=e.value,t=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:function(e){return u.push(e)},onKeyDown:p,onClick:m},o,{className:(0,i.Z)("tabs__item",k,null==o?void 0:o.className,{"tabs__item--active":l===n})}),null!=t?t:n)})))}function y(e){var n=e.lazy,t=e.children,a=e.selectedValue,i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){var l=i.find((function(e){return e.props.value===a}));return l?(0,r.cloneElement)(l,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})})))}function w(e){var n=f(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",b)},r.createElement(v,(0,a.Z)({},e,n)),r.createElement(y,(0,a.Z)({},e,n)))}function N(e){var n=(0,h.Z)();return r.createElement(w,(0,a.Z)({key:String(n)},e))}},5072:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return m}});var a=t(3117),r=t(102),i=(t(7294),t(3905)),l=(t(9960),t(4866),t(5162),t(4996),["components"]),o={toc_min_heading_level:2,toc_max_heading_level:4},s="JavaScript Functions",u={unversionedId:"js-functions",id:"js-functions",title:"JavaScript Functions",description:"Arrow Syntax",source:"@site/docs/14-js-functions.mdx",sourceDirName:".",slug:"/js-functions",permalink:"/docs/js-functions",draft:!1,editUrl:"https://github.com/gwen-interpreter/gwen-interpreter.github.io/edit/master/docs/14-js-functions.mdx",tags:[],version:"current",sidebarPosition:14,frontMatter:{toc_min_heading_level:2,toc_max_heading_level:4},sidebar:"tutorialSidebar",previous:{title:"String Interpolation",permalink:"/docs/string-interpolation"},next:{title:"Utility Functions",permalink:"/docs/utility-functions"}},c={},m=[{value:"Arrow Syntax",id:"arrow-syntax",level:2},{value:"Zero argument expressions",id:"zero-argument-expressions",level:3},{value:"Single argument functions",id:"single-argument-functions",level:3},{value:"Implict argument binding",id:"implict-argument-binding",level:4},{value:"Explicit argument binding",id:"explicit-argument-binding",level:4},{value:"Dynamic argument binding",id:"dynamic-argument-binding",level:4},{value:"Multi argument functions",id:"multi-argument-functions",level:3},{value:"Implict argument binding",id:"implict-argument-binding-1",level:4},{value:"Explicit argument binding",id:"explicit-argument-binding-1",level:4},{value:"Dynamic argument binding",id:"dynamic-argument-binding-1",level:4},{value:"Inlined functions",id:"inlined-functions",level:3},{value:"Expressions",id:"expressions",level:4},{value:"Blocks",id:"blocks",level:4},{value:"Nested",id:"nested",level:4},{value:"REPL Support",id:"repl-support",level:3}],p={toc:m};function d(e){var n=e.components,t=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"javascript-functions"},"JavaScript Functions"),(0,i.kt)("h2",{id:"arrow-syntax"},"Arrow Syntax"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Coming soon to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/releases/tag/v3.56.0"},"v3.56.0"))),(0,i.kt)("p",null,"You can execute JS functions in Gwen using the arrow syntax."),(0,i.kt)("h3",{id:"zero-argument-expressions"},"Zero argument expressions"),(0,i.kt)("p",null,"These accept no arguments and have either: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a single expression in the body which returns a value"),(0,i.kt)("li",{parentName:"ul"},"a block containing zero or more statments, followed by a return expression")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},'  Given today is defined by js "() => new Date().toISOString().substring(0, 10)"\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},'    And tomorrow is defined by js\n        """\n        () => { \n            const today = new Date()\n            const tomorrow = new Date()\n            tomorrow.setDate(today.getDate() + 1)\n            return tomorrow.toISOString().substring(0, 10)\n        }\n        """\n')),(0,i.kt)("p",null,"Prior to arrow functions being introduced, the equivalent of the above was:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},'    And tomorrow is defined by js\n        """\n        (function() { \n            const today = new Date()\n            const tomorrow = new Date()\n            tomorrow.setDate(today.getDate() + 1)\n            return tomorrow.toISOString().substring(0, 10)\n        })()\n        """\n')),(0,i.kt)("h3",{id:"single-argument-functions"},"Single argument functions"),(0,i.kt)("p",null,"These accept a single argument and have either: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a single expression that operates on the arginemnt in the body and returns a value"),(0,i.kt)("li",{parentName:"ul"},"a block containing zero or more statments that operate on the argument, followed by a return expression")),(0,i.kt)("h4",{id:"implict-argument-binding"},"Implict argument binding"),(0,i.kt)("p",null,"An argument is implicity bound to a same named reference. In this example, the argument ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," on line 2 takes on the value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," reference one line 1 which sources text from an element on a web page."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin",metastring:"showLineNumbers",showLineNumbers:!0},'  Given name can be located by css ".name"\n    And uppercased name is defined by js "(name) => name.toUpperCase()"\n')),(0,i.kt)("p",null,"Prior to arrow functions being introduced, the equivalent of the above was:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},"    And uppercased name is defined by js \"'${name}'.toUpperCase()\"\n")),(0,i.kt)("p",null,"So if ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," contained a single quote in it such as ",(0,i.kt)("inlineCode",{parentName:"p"},"O'Reilly")," for example, the above would have resolved to ",(0,i.kt)("inlineCode",{parentName:"p"},"'O'Reilly'.toUpperCase()")," which would then result in a missing closed quote error at runtime. With arrow functions, this would never happen since the value is bound to the argument name and not a quoted literal. So arrow functions are much safer in this regard."),(0,i.kt)("h4",{id:"explicit-argument-binding"},"Explicit argument binding"),(0,i.kt)("p",null,"When references have spaces in their names, they can't be implicitly bound to function arguments in the same manner as above (since JavaScript does not permit spaces in argument names). The solution is to explicitly assign the reference to the argument using the ",(0,i.kt)("inlineCode",{parentName:"p"},"=")," operator. Here, the argument ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," on line 4 takes on the value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"first name")," reference on line 1 which source text from an element on a web page."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin",metastring:"{1,4} showLineNumbers","{1,4}":!0,showLineNumbers:!0},'    Given first name can be located by css ".first_name"\n      And cap name is defined by js\n          """\n          (name = first name) => { \n              const head = name.charAt(0).toUpperCase()\n              const tail = name.slice(1).toLowerCase()\n              return head + tail\n          }\n          """\n')),(0,i.kt)("h4",{id:"dynamic-argument-binding"},"Dynamic argument binding"),(0,i.kt)("p",null,"Suppose we wanted to reuse the above function to captitalise multiple names? The first step would be to redefine it without binding the name argument to anything as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},'    Given capitalise is defined by js\n          """\n          (name) => { \n              const head = name.charAt(0).toUpperCase()\n              const tail = name.slice(1).toLowerCase()\n              return head + tail\n          }\n          """\n')),(0,i.kt)("p",null,"Then we can apply the function to different names by binding each one. In the following example, line 3 binds the ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," argument to the value returned by ",(0,i.kt)("inlineCode",{parentName:"p"},"first name"),", applies the ",(0,i.kt)("inlineCode",{parentName:"p"},"capitalise")," function (above) to that and then stores the result in ",(0,i.kt)("inlineCode",{parentName:"p"},"cap first name"),". Line 4 does the same but with ",(0,i.kt)("inlineCode",{parentName:"p"},"last name")," instead."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin",metastring:"{3-4} showLineNumbers","{3-4}":!0,showLineNumbers:!0},'  Given first name can be located by css ".first_name"\n    And last name can be located by css ".last_name"\n    And cap first name is defined by capitalise applied to "${first name}"\n    And proper last name is defined by capitalise applied to "${last name}"\n')),(0,i.kt)("h3",{id:"multi-argument-functions"},"Multi argument functions"),(0,i.kt)("p",null,"These accept multiple arguments and have either: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a single expression that operates on the arginemnts in the body and returns a value"),(0,i.kt)("li",{parentName:"ul"},"a block containing zero or more statments that operate on the arguments, followed by a return expression")),(0,i.kt)("h4",{id:"implict-argument-binding-1"},"Implict argument binding"),(0,i.kt)("p",null,"Arguments are implicity bound to same named references. In this example, the arguments ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"surname")," on line 3 take on the values of the ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"surname")," references on line 1 and 2 respecitvely, which each source their values from two different elements on a web page."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin",metastring:"showLineNumbers",showLineNumbers:!0},'  Given name can be located by css ".name"\n    And surname can be located by css ".surname"\n    And full name is defined by js "(name, surname) => name + \' \' + surname"\n')),(0,i.kt)("h4",{id:"explicit-argument-binding-1"},"Explicit argument binding"),(0,i.kt)("p",null,"Here, the arguments ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"surname")," on line 5 take on the values of the ",(0,i.kt)("inlineCode",{parentName:"p"},"first name")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"last name")," reference on lines 1 and 2 which source their values from two different elements on a web page."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin",metastring:"{1,4} showLineNumbers","{1,4}":!0,showLineNumbers:!0},'    Given first name can be located by css ".first_name"\n      And last name can be located by css ".last_name"\n      And full name is defined by js\n          """\n          (name = first name, surname = last name) => name + \' \' + surname\n          """\n')),(0,i.kt)("h4",{id:"dynamic-argument-binding-1"},"Dynamic argument binding"),(0,i.kt)("p",null,"Suppose we wanted to reuse the above functions to captitalise the first and last names in the full name?"),(0,i.kt)("p",null,"First, we capitalise the names by reusing the ",(0,i.kt)("inlineCode",{parentName:"p"},"capitalise")," function we defined earlier above:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},'  Given capitalise is defined by js\n        """\n        (name) => { \n            const head = name.charAt(0).toUpperCase()\n            const tail = name.slice(1).toLowerCase()\n            return head + tail\n        }\n        """\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},'  And first name can be located by css ".first_name"\n  And last name can be located by css ".last_name"\n  And proper first name is defined by capitalise applied to "${first name}"\n  And proper last name is defined by capitalise applied to "${last name}"\n')),(0,i.kt)("p",null,"Then we reuse and apply the ",(0,i.kt)("inlineCode",{parentName:"p"},"full name")," function to captitalise the names:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},"  And full name is defined by js \"(name, surname) => name + ' ' + surname\"\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},'  And proper full name is defined by full name applied to "${proper first name},${proper last name}" delimited by ","\n')),(0,i.kt)("p",null,"Prior to arrow functions being introduced, the ",(0,i.kt)("inlineCode",{parentName:"p"},"full name")," function needed to be defined like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},'  And full name is defined by js \n      """\n      (function(name, surname) { \n        return name + \' \' + surname\n      })(arguments[0], arguments[1])\n      """\n')),(0,i.kt)("p",null,"The arrow function equivalent is much cleaner and simpler:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},"  And full name is defined by js \"(name, surname) => name + ' ' + surname\"\n")),(0,i.kt)("h3",{id:"inlined-functions"},"Inlined functions"),(0,i.kt)("p",null,"Functions can be used in placehoders references inline."),(0,i.kt)("h4",{id:"expressions"},"Expressions"),(0,i.kt)("p",null,"Consider the following which uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"@Eager")," annotation to immediately evaluate a function and store the result in ",(0,i.kt)("inlineCode",{parentName:"p"},"uppercased name"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},'  Given name can be located by css ".name"\n    And @Eager uppercased name is defined by js " name => name.toUpperCase() "\n')),(0,i.kt)("p",null,"Another way to do this could be to declare the function inline as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},'    And uppercased name is "${ name => name.toUpperCase() }"\n')),(0,i.kt)("p",null,"Functions can be inlined in this manner wherever placehoders are used. When used in this way, they evaluate immediately and cannot be reused elsewhere."),(0,i.kt)("h4",{id:"blocks"},"Blocks"),(0,i.kt)("p",null,"A more complex example follows. If ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," resolves to 'GWEN' and ",(0,i.kt)("inlineCode",{parentName:"p"},"surname")," resolves to 'Stacey', then the following function would set ",(0,i.kt)("inlineCode",{parentName:"p"},"fancy full nane")," to 'STACEY, Gwen'."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},'  Given name can be located by css ".name"\n    And surname can be located by css ".surname"\n    And fancy full name is \n        """\n        ${ \n            (name, surname) => {\n              const firstName = name.charAt(0).toUpperCase() + name.slice(1).toLowerCase()\n              const lastName = surname.toUpperCase()\n              return lastName + \', \' + firstName\n            }\n        }\n        """\n')),(0,i.kt)("h4",{id:"nested"},"Nested"),(0,i.kt)("p",null,"Inlined functions can also be nested. The following example reads a number from a web page, pads it with leading zeroes and then uses that to reference a value configured in another binding. In this example, if the ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," field on a web page contains 1, then ",(0,i.kt)("inlineCode",{parentName:"p"},"username")," will be assigned to the username bound to ",(0,i.kt)("inlineCode",{parentName:"p"},"user.001.username1")," (which could be a configured setting or something else)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},'  Given number can be located by css ".number"\n    And username is "${user.${ number => (\'00\' + number).slice(-3) }.username}"\n')),(0,i.kt)("p",null,"Nesting should be used sparingly and would require the following annotation for a successful ",(0,i.kt)("a",{parentName:"p",href:"/docs/dry-run"},"dry run"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},"  And username is    @DryRun(name=`number => ('00' + number).slice(-3)`,value='001')\n      \"\"\"\n      ${user.${ number => ('00' + number).slice(-3) }.username}\n      \"\"\"\n")),(0,i.kt)("h3",{id:"repl-support"},"REPL Support"),(0,i.kt)("p",null,"You can also exeucte arrow functions directly in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/repl"},"REPL console"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-script"},"   __ ___      _____ _ __     _    \n  / _` \\ \\ /\\ / / _ \\ '_ \\   { \\,\" \n | (_| |\\ V  V /  __/ | | | {_`/   \n  \\__, | \\_/\\_/ \\___|_| |_|   `    \n  |___/                            \n\nWelcome to gwen-web v3.56.0\ngweninterpreter.org\n\n\nREPL Console\n\nEnter steps to evaluate or type help for more options..\n\ngwen> Given name is \"Gwen\"\n\n  [10ms] \u2714\n\ngwen> name => name.toUpperCase()\n\n  'GWEN'\n\ngwen> \n")))}d.isMDXComponent=!0}}]);