"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[937],{927:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return d},default:function(){return l}});var o=n(7462),r=n(3366),i=(n(7294),n(3905)),a=(n(5064),n(8215),n(4996),["components"]),s={sidebar_position:1},c="Introduction",u={unversionedId:"introduction",id:"introduction",isDocsHomePage:!1,title:"Introduction",description:"Gwen",source:"@site/docs/introduction.mdx",sourceDirName:".",slug:"/introduction",permalink:"/docs/introduction",editUrl:"https://github.com/gwen-interpreter/gwen-interpreter.github.io/gwen-web/docs/introduction.mdx",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Get Started",permalink:"/docs/get-started"}},d=[{value:"Gwen",id:"gwen",children:[{value:"Automation Bindings for Gherkin",id:"automation-bindings-for-gherkin",children:[]}]},{value:"How it works",id:"how-it-works",children:[{value:"1. Declare your feature specs",id:"1-declare-your-feature-specs",children:[]},{value:"2. Compose your meta specs",id:"2-compose-your-meta-specs",children:[]},{value:"3. Launch Gwen to test your features",id:"3-launch-gwen-to-test-your-features",children:[]}]}],p={toc:d};function l(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"introduction"},"Introduction"),(0,i.kt)("h2",{id:"gwen"},"Gwen"),(0,i.kt)("h3",{id:"automation-bindings-for-gherkin"},"Automation Bindings for Gherkin"),(0,i.kt)("p",null,"Gwen is a ",(0,i.kt)("a",{parentName:"p",href:"https://cucumber.io/docs/gherkin/reference/"},"Gherkin")," interpreter that executes feature specs to automate web application testing and repetitive web processing through ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen/wiki/Meta-Features"},"meta specs")," that you compose with the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/wiki/Supported-DSL"},"Gwen DSL"),"."),(0,i.kt)("h2",{id:"how-it-works"},"How it works"),(0,i.kt)("h3",{id:"1-declare-your-feature-specs"},"1. Declare your feature specs"),(0,i.kt)("p",null,"Declare feature specs to describe how scenarios and examples must behave. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},"Feature: Todo\n \n  Scenario: Create todo list\n    Given a new todo list\n     When the following items are added\n          | Item          |\n          | Get the milk  |\n          | Walk the dog  |\n     Then the list will contain 2 items\n")),(0,i.kt)("h3",{id:"2-compose-your-meta-specs"},"2. Compose your meta specs"),(0,i.kt)("p",null,"Compose meta specs to describe how features specs are to be evaluated. This one will run a test."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gherkin"},'Feature: Todo Meta\n\n\n  @Context\n  @StepDef\n  Scenario: a new todo list\n       When I navigate to "http://todomvc.com/examples/react"\n       Then the todo field can be located by class "new-todo"\n        And count can be located by css ".todo-count strong"\n\n  @Action\n  @StepDef\n  @ForEachTableRecord(header="top")\n  Scenario: the following items are added\n       When I enter Item in the todo field\n\n  @Assertion\n  @StepDef\n  Scenario: the list will contain <expected> items\n       Then count should be "$<expected>"\n')),(0,i.kt)("h3",{id:"3-launch-gwen-to-test-your-features"},"3. Launch Gwen to test your features"),(0,i.kt)("p",null,"Launch Gwen to bind your meta and feature specs and automate execution. In this case a test execution."))}l.isMDXComponent=!0}}]);