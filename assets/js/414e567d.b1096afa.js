"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2577],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,f=u["".concat(s,".").concat(m)]||u[m]||c[m]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1842:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),i=(n(9960),["components"]),l={slug:"/dsl",toc_min_heading_level:2,toc_max_heading_level:2},s="Gwen DSL",p={unversionedId:"dsl/dsl",id:"dsl/dsl",title:"Gwen DSL",description:"DSL Steps",source:"@site/docs/06-dsl/01-dsl.mdx",sourceDirName:"06-dsl",slug:"/dsl",permalink:"/docs/dsl",draft:!1,editUrl:"https://github.com/gwen-interpreter/gwen-interpreter.github.io/edit/master/docs/06-dsl/01-dsl.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/dsl",toc_min_heading_level:2,toc_max_heading_level:2},sidebar:"tutorialSidebar",previous:{title:"Load Strategies",permalink:"/docs/meta/load-strategies"},next:{title:"DSL Reference",permalink:"/docs/dsl/reference"}},d={},c=[{value:"DSL Steps",id:"dsl-steps",level:2},{value:"All execution happens in the DSL",id:"all-execution-happens-in-the-dsl",level:2},{value:"Compose StepDefs with DSL steps",id:"compose-stepdefs-with-dsl-steps",level:2}],u={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gwen-dsl"},"Gwen DSL"),(0,o.kt)("h2",{id:"dsl-steps"},"DSL Steps"),(0,o.kt)("p",null,"Every Gherkin step that matches a ",(0,o.kt)("a",{parentName:"p",href:"/docs/dsl/reference"},"prescribed DSL")," is considerd a DSL step and is readily executable by Gwen."),(0,o.kt)("admonition",{title:"Example",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The following is a DSL Step:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},'  Then the page title should contain "TodoMVC"\n')),(0,o.kt)("p",{parentName:"admonition"},"Since it matches:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/dsl/reference#the-page-title-should-match-expression"},(0,o.kt)("inlineCode",{parentName:"a"},'the page title should[ not] <match> "<expression>"'))))),(0,o.kt)("h2",{id:"all-execution-happens-in-the-dsl"},"All execution happens in the DSL"),(0,o.kt)("p",null,"Every step interpreted by Gwen will directly or inderectly through ",(0,o.kt)("a",{parentName:"p",href:"/docs/meta#stepdefs"},"StepDefs")," result in either:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"One or many DSL steps being executed"),(0,o.kt)("li",{parentName:"ul"},"One or many undefined steps being reported"),(0,o.kt)("li",{parentName:"ul"},"Or a combination of the above")),(0,o.kt)("p",null,"If you've got everything right, all steps will execute. It is your job as a Gwen user to define StepDefs for every non DSL step in your features (and in your meta if you introduce any there). "),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Use ",(0,o.kt)("a",{parentName:"p",href:"/docs/modes/dry-runs"},"dry runs")," to check for syntax and binding errors and identify any missing StepDefs before committing to an automation cycle.")),(0,o.kt)("admonition",{title:"Step execution rules",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Gwen interprets steps for execution according to the following rules:"),(0,o.kt)("ol",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ol"},"StepDef rule",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"If the step is bound to a StepDef then apply these rules to every step in the body of that StepDef"))),(0,o.kt)("li",{parentName:"ol"},"DSL rule",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"If the step is a DSL step then execute it using built-in code"))),(0,o.kt)("li",{parentName:"ol"},"Undefined rule",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"If neither of the above rules are satisfied then report an undefined step error"))))),(0,o.kt)("h2",{id:"compose-stepdefs-with-dsl-steps"},"Compose StepDefs with DSL steps"),(0,o.kt)("p",null,"To make the following feature step executable:"),(0,o.kt)("admonition",{title:"Step in feature",type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("em",{parentName:"p"},"File: features/todo.feature")),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},"  Given a new todo list\n"))),(0,o.kt)("p",null,"You could compose a StepDef as follows:"),(0,o.kt)("admonition",{title:"StepDef in meta",type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("em",{parentName:"p"},"File: features/todo.meta")),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-gherkin",metastring:"{4-7}","{4-7}":!0},'  @Context\n  @StepDef\n  Scenario: a new todo list\n    Given my todo list can be located by css ".todo-list"\n     When I navigate to "https://todomvc.com/examples/react"\n     Then the page title should contain "TodoMVC"\n      And my todo list should not be displayed\n')),(0,o.kt)("p",{parentName:"admonition"},"Calls DSL steps:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/dsl/reference#element-can-be-located-by-selector-expression"},(0,o.kt)("inlineCode",{parentName:"a"},'<element> can be located by <selector> "<expression>"'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/dsl/reference#i-navigate-to-url"},(0,o.kt)("inlineCode",{parentName:"a"},"I navigate to <url>"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/dsl/reference#the-page-title-should-match-expression"},(0,o.kt)("inlineCode",{parentName:"a"},'the page title should[ not] <match> "<expression>"'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/dsl/reference#element-should-be-state"},(0,o.kt)("inlineCode",{parentName:"a"},"<element> should[ not] be <state>"))))))}m.isMDXComponent=!0}}]);