"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4005],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(7294),r=n(4334),o="tabItem_Ymn6";function i(e){var t=e.children,n=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:n},t)}},5488:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(3117),r=n(7294),o=n(4334),i=n(2389),l=n(7392),s=n(7094),u=n(2466),p="tabList__CuJ",c="tabItem_LNqP";function d(e){var t,n,i=e.lazy,d=e.block,m=e.defaultValue,f=e.values,h=e.groupId,b=e.className,v=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=f?f:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),y=(0,l.l)(k,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===m?m:null!=(t=null!=m?m:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:v[0].props.value;if(null!==g&&!k.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,s.U)(),N=w.tabGroupChoices,x=w.setTabGroupChoices,S=(0,r.useState)(g),D=S[0],C=S[1],O=[],T=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var E=N[h];null!=E&&E!==D&&k.some((function(e){return e.value===E}))&&C(E)}var _=function(e){var t=e.currentTarget,n=O.indexOf(t),a=k[n].value;a!==D&&(T(t),C(a),null!=h&&x(h,String(a)))},j=function(e){var t,n=null;switch(e.key){case"Enter":_(e);break;case"ArrowRight":var a,r=O.indexOf(e.currentTarget)+1;n=null!=(a=O[r])?a:O[0];break;case"ArrowLeft":var o,i=O.indexOf(e.currentTarget)-1;n=null!=(o=O[i])?o:O[O.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},b)},k.map((function(e){var t=e.value,n=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:D===t?0:-1,"aria-selected":D===t,key:t,ref:function(e){return O.push(e)},onKeyDown:j,onClick:_},i,{className:(0,o.Z)("tabs__item",c,null==i?void 0:i.className,{"tabs__item--active":D===t})}),null!=n?n:t)}))),i?(0,r.cloneElement)(v.filter((function(e){return e.props.value===D}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},v.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==D})}))))}function m(e){var t=(0,i.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},9557:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var a=n(3117),r=n(102),o=(n(7294),n(3905)),i=(n(9960),n(5488),n(5162),n(4996),["components"]),l={slug:"/meta",toc_min_heading_level:2,toc_max_heading_level:3},s="Gwen Meta",u={unversionedId:"meta/meta",id:"meta/meta",title:"Gwen Meta",description:"Meta specs",source:"@site/docs/05-meta/01-meta.mdx",sourceDirName:"05-meta",slug:"/meta",permalink:"/docs/meta",draft:!1,editUrl:"https://github.com/gwen-interpreter/gwen-interpreter.github.io/edit/master/docs/05-meta/01-meta.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/meta",toc_min_heading_level:2,toc_max_heading_level:3},sidebar:"tutorialSidebar",previous:{title:"Get Started",permalink:"/docs/get-started"},next:{title:"Load Strategies",permalink:"/docs/meta/load-strategies"}},p={},c=[{value:"Meta specs",id:"meta-specs",level:2},{value:"StepDefs",id:"stepdefs",level:2},{value:"Composable step definitions",id:"composable-step-definitions",level:3},{value:"StepDefs with parameters",id:"stepdefs-with-parameters",level:3},{value:"Synchronized StepDefs",id:"synchronized-stepdefs",level:3}],d={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gwen-meta"},"Gwen Meta"),(0,o.kt)("h2",{id:"meta-specs"},"Meta specs"),(0,o.kt)("p",null,"Meta specs are ",(0,o.kt)("a",{parentName:"p",href:"https://cucumber.io/docs/gherkin/reference/"},"Gherkin")," specifications that describe what steps in features will execute and are the automation glue in Gwen. They define all the step definitions and bindings required for automation and attach to features at runtime."),(0,o.kt)("h2",{id:"stepdefs"},"StepDefs"),(0,o.kt)("h3",{id:"composable-step-definitions"},"Composable step definitions"),(0,o.kt)("p",null,"Step definitions are defined as ",(0,o.kt)("code",null,"@StepDef")," annotated ",(0,o.kt)("a",{parentName:"p",href:"https://cucumber.io/docs/gherkin/reference/#example"},"Scenarios")," with names that match feature steps and bodies that call out to one or many ",(0,o.kt)("a",{parentName:"p",href:"/docs/dsl/reference"},"DSL steps")," to perform operations."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Put all your step definitions in meta to keep your features clean and free of automation concerns.")),(0,o.kt)("p",null,"Consider the following feature step:"),(0,o.kt)("admonition",{title:"Feature Step",type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("em",{parentName:"p"},"File: features/todo.feature")),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},"  Given a new todo list\n"))),(0,o.kt)("p",null,"A step definition for executing this step could be defined in meta as follows:"),(0,o.kt)("admonition",{title:"StepDef",type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("em",{parentName:"p"},"File: features/todo.meta")),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-gherkin",metastring:"{2-3}","{2-3}":!0},'  @Context\n  @StepDef\n  Scenario: a new todo list\n    Given my todo list can be located by css ".todo-list"\n     When I navigate to "${todo.page.url}"\n     Then the page title should contain "TodoMVC"\n      And my todo list should be hidden\n')),(0,o.kt)("p",{parentName:"admonition"},"Calls DSL steps:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/dsl/reference#element-can-be-located-by-selector-expression"},(0,o.kt)("inlineCode",{parentName:"a"},'<element> can be located by <selector> "<expression>"'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/dsl/reference#i-navigate-to-url"},(0,o.kt)("inlineCode",{parentName:"a"},'I navigate to "<url>"'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/dsl/reference#the-page-title-should-match-expression"},(0,o.kt)("inlineCode",{parentName:"a"},'the page title should[ not] <match> "<expression>"'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/dsl/reference#element-should-be-state"},(0,o.kt)("inlineCode",{parentName:"a"},"<element> should[ not] be <state>"))))),(0,o.kt)("p",null,"Notice how the name of the StepDef matches the name of the feature step (excluding the leading ",(0,o.kt)("em",{parentName:"p"},"Given")," keyword). This is how step definitions bind to feature steps in Gwen; by name. Notice also that the body calls out to several DSL steps to perform the desired operations. Composing StepDefs in meta is all you need to do to make your features executable."),(0,o.kt)("h3",{id:"stepdefs-with-parameters"},"StepDefs with parameters"),(0,o.kt)("p",null,"StepDefs can also be declared to accept parameters using one or more ",(0,o.kt)("inlineCode",{parentName:"p"},"<param-name>")," placeholders in the declared name as follows:"),(0,o.kt)("admonition",{title:"Feature Step",type:"note"},(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},"  Then the list will contain 2 items\n"))),(0,o.kt)("admonition",{title:"StepDef with a parameter",type:"note"},(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-gherkin",metastring:"{2-3,5}","{2-3,5}":!0},'  @Assertion\n  @StepDef\n  Scenario: the list will contain <expected-count> items\n    Given the displayed count can be located by css ".todo-count strong"\n     Then the displayed count should be "$<expected-count>"\n')),(0,o.kt)("p",{parentName:"admonition"},"Calls DSL steps:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/dsl/reference#element-can-be-located-by-selector-expression"},(0,o.kt)("inlineCode",{parentName:"a"},'<element> can be located by <selector> "<expression>"'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/dsl/reference#text-ref-should-match-expression"},(0,o.kt)("inlineCode",{parentName:"a"},'<textRef> should[ not] <match> "<expression>"'))))),(0,o.kt)("p",null,"Here the name of the StepDef matches the feature step when the value ",(0,o.kt)("code",null,"2")," (in the feature step) is substituted in place of ",(0,o.kt)("inlineCode",{parentName:"p"},"<expected-count>")," in the StepDef name. This is how parameters are passed to StepDefs in Gwen; by substitution. The last step in the body extracts the parameter value with ",(0,o.kt)("inlineCode",{parentName:"p"},"$<expected-count>"),"."),(0,o.kt)("h3",{id:"synchronized-stepdefs"},"Synchronized StepDefs"),(0,o.kt)("p",null,"In the rare case where you might need to synchronize the execution of your StepDef to a single thread (due to resource contention or a conflict for example), you can do so by tagging it with the ",(0,o.kt)("inlineCode",{parentName:"p"},"@Synchronized")," annotation. Gwen will then guarantee that only one thread will execute your StepDef at any given time when multiple features or scenarios are executed in ",(0,o.kt)("a",{parentName:"p",href:"/docs/modes/parallel"},"parallel mode")," by concurrent threads."))}m.isMDXComponent=!0}}]);