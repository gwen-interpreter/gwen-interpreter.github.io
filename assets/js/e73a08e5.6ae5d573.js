"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5913],{4758:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"docker","title":"Docker","description":"Sometimes it may be useful to run Gwen in Docker. For example, if you want to run Gwen in a Jenkins pipeline on a build server or node agent.","source":"@site/docs/13-docker.mdx","sourceDirName":".","slug":"/docker","permalink":"/docs/docker","draft":false,"unlisted":false,"editUrl":"https://github.com/gwen-interpreter/gwen-interpreter.github.io/edit/master/docs/13-docker.mdx","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"title":"Docker","toc_min_heading_level":2,"toc_max_heading_level":3},"sidebar":"tutorialSidebar","previous":{"title":"Video Recordings","permalink":"/docs/reports/video-recordings"},"next":{"title":"State Levels","permalink":"/docs/state-levels"}}');var i=r(4848),t=r(8453),s=(r(6289),r(5537)),l=r(9329);r(9030);const a={title:"Docker",toc_min_heading_level:2,toc_max_heading_level:3},c="Running Gwen in Docker",d={},u=[{value:"Get started",id:"get-started",level:2},{value:"Docker Setup",id:"docker-setup",level:2},{value:"Dockerfile",id:"dockerfile",level:3},{value:"Docker compose file",id:"docker-compose-file",level:3},{value:"Docker env file",id:"docker-env-file",level:3},{value:"Grid config file",id:"grid-config-file",level:3},{value:"Gwen settings file",id:"gwen-settings-file",level:3},{value:"Run Gwen in docker",id:"run-gwen-in-docker",level:2},{value:"Run Gwen locally against Grid in Docker",id:"run-gwen-locally-against-grid-in-docker",level:2},{value:"Video capture",id:"video-capture",level:2},{value:"Downloading Files in Chrome",id:"downloading-files-in-chrome",level:2}];function h(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"running-gwen-in-docker",children:"Running Gwen in Docker"})}),"\n",(0,i.jsxs)(n.p,{children:["Sometimes it may be useful to run Gwen in ",(0,i.jsx)(n.a,{href:"https://www.docker.com/",children:"Docker"}),". For example, if you want to run Gwen in a ",(0,i.jsx)(n.a,{href:"/docs/jenkins",children:"Jenkins"})," pipeline on a build server or node agent.\nSetting up Gwen to run in a dynamic ",(0,i.jsx)(n.a,{href:"https://github.com/SeleniumHQ/docker-selenium?tab=readme-ov-file#dynamic-grid",children:"Selenium Grid"})," in Docker is describe here."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Since ",(0,i.jsx)(n.a,{href:"https://github.com/gwen-interpreter/gwen-web/releases/tag/v4.2.0",children:"v4.2.0"}),", Gwen will generate docker files targetting the ",(0,i.jsx)(n.a,{href:"https://github.com/SeleniumHQ/docker-selenium?tab=readme-ov-file#dynamic-grid",children:"Selenium Grid"})," instead of ",(0,i.jsx)(n.a,{href:"https://github.com/aerokube/selenoid",children:"Selenoid"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"get-started",children:"Get started"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://gweninterpreter.org/docs/get-started",children:"Start a new Gwen project"})," or use an existing one."]}),"\n",(0,i.jsx)(n.h2,{id:"docker-setup",children:"Docker Setup"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Since ",(0,i.jsx)(n.a,{href:"https://github.com/gwen-interpreter/gwen-web/releases/tag/v3.16.0",children:"v3.16.0"}),", the ",(0,i.jsx)(n.a,{href:"/docs/launcher#gwen-launch-init-options-docker",children:(0,i.jsx)(n.code,{children:"init --docker"})})," command was introduced to generate Docker and Grid files in your project. You will need to create the files manually if you are using an older version."]}),"\n"]}),"\n",(0,i.jsxs)(s.A,{groupId:"jstool",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"npm",value:"npm"},{label:"pnpm",value:"pnpm"}],children:[(0,i.jsxs)(l.A,{value:"yarn",children:[(0,i.jsx)(n.p,{children:"Run the following command in the root of your project to generate all the necessary Docker and Grid files"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"yarn gwen init --docker\n"})})]}),(0,i.jsxs)(l.A,{value:"npm",children:[(0,i.jsx)(n.p,{children:"Run the following command in the root of your project to generate all the necessary Docker and Grid files"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"npm run gwen init --docker\n"})})]}),(0,i.jsxs)(l.A,{value:"pnpm",children:[(0,i.jsx)(n.p,{children:"Run the following command in the root of your project to generate all the necessary Docker and Grid files"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"pnpm gwen init --docker\n"})})]})]}),"\n",(0,i.jsx)(n.h3,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:"{3}",children:"./project                    # Your project root\n \u2514\u2500\u2500 /gwen\n     \u2514\u2500\u2500Dockerfile           # Docker image file\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The init --docker commad will create a ",(0,i.jsx)(n.code,{children:"gwen/DockerFile"})," with the following content to build an Alpine Linux node and Yarn based image with bash and Open JDK 11 JRE installed."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# base alpine image with node\nFROM node:21-alpine\n\n# install bash and java\nRUN apk update \\\n    && apk add bash \\\n    && apk add openjdk11-jre\n"})}),"\n",(0,i.jsx)(n.p,{children:"Should you prefer a Red Hat Linux and Open JDK 11 based image with node and Yarn installed instead, you can change the content to this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# base Red Hat image with open JDK 11\nFROM adoptopenjdk/openjdk11:ubi\n\n# install node & yarn\nRUN dnf module install nodejs:16 -y\nRUN npm install --global yarn\n"})}),"\n",(0,i.jsx)(n.h3,{id:"docker-compose-file",children:"Docker compose file"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:"{4-5}",children:"./project                         # Your project root\n \u2514\u2500\u2500 /gwen\n     \u251c\u2500\u2500 .env                     # Docker env file\n     \u251c\u2500\u2500 docker-compose.yml       # Se Grid docker compose file\n     \u251c\u2500\u2500 docker-compose-arm.yml   # Se Grid docker compose file for ARMs\n     \u251c\u2500\u2500 Dockerfile               # Docker image file\n     \u2514\u2500\u2500/gwen/wait4grid.sh        # Se Grid wait script\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The init --docker commad will create a ",(0,i.jsx)(n.code,{children:"gwen/docker-compose.yml"})," file with the following content to create a Selenium Grid in Docker that Gwen will connect to."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'services:\n  node-docker:\n    image: selenium/node-docker:latest\n    volumes:\n      - $PWD/gwen/output/.assets:/opt/selenium/assets\n      - $PWD/gwen/output/downloads:/home/seluser/Downloads\n      - $PWD/gwen/conf/browsers/grid.toml:/opt/selenium/docker.toml\n      - /var/run/docker.sock:/var/run/docker.sock\n    depends_on:\n      - selenium-hub\n    environment:\n      - SE_EVENT_BUS_HOST=selenium-hub\n      - SE_EVENT_BUS_PUBLISH_PORT=4442\n      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443\n      - SE_NODE_DOCKER_CONFIG_FILENAME=docker.toml\n      - SE_START_VNC=false\n    shm_size: 2gb\n\n  selenium-hub:\n    image: selenium/hub:latest\n    container_name: selenium-hub\n    ports:\n      - "4442:4442"\n      - "4443:4443"\n      - "4444:4444"\n\n  chrome:\n    image: selenium/standalone-chrome:latest\n\n  edge:\n    image: selenium/standalone-edge:latest\n\n  firefox:\n    image: selenium/standalone-firefox:latest\n\n  video:\n    image: selenium/video:ffmpeg-6.1-20231219\n\n  gwen:\n    depends_on:\n      - node-docker\n    build:\n      context: .\n      dockerfile: Dockerfile\n    environment:\n      - GWEN_ENV\n      - GWEN_PROFILE\n      - GWEN_BROWSER\n      - GWEN_DRY_RUN\n      - GWEN_PARALLEL\n      - GWEN_THREADS\n      - GWEN_HEADLESS\n      - GWEN_VIDEO\n      - GWEN_WEB_VERSION\n      - SELENIUM_HUB\n      - NO_COLOR\n      - TZ\n    volumes:\n      - "$PWD:/project"\n    working_dir: /project\n    command: bash -c "./gwen/wait4grid.sh && yarn install && yarn gwen -b -c gwen/conf/browsers/grid.conf gwen/features"\n\n  gwen-dry-run:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    environment:\n      - GWEN_ENV\n      - GWEN_WEB_VERSION\n      - NO_COLOR\n      - TZ\n    volumes:\n      - "$PWD:/project"\n    working_dir: /project\n    command: bash -c "yarn install && yarn gwen -bn --parallel gwen/features"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"docker-env-file",children:"Docker env file"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Since ",(0,i.jsx)(n.a,{href:"https://github.com/gwen-interpreter/gwen-web/releases/tag/v3.35.0",children:"v3.35.0"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"gwen/.env"})," file containing the following environment variable defaults will also be generated by ",(0,i.jsx)(n.code,{children:"init --docker"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"SELENIUM_HUB=selenium-hub\nNO_COLOR=1\n"})}),"\n",(0,i.jsx)(n.h3,{id:"grid-config-file",children:"Grid config file"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:"{4}",children:"./project                      # Your project root\n \u2514\u2500\u2500 /gwen\n     \u2514\u2500\u2500 /browsers\n         \u2514\u2500\u2500grid.toml          # Se Grid docker config\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The init --docker command will create a ",(0,i.jsx)(n.code,{children:"gwen/conf/browsers/grid.toml"})," file with the following content that will be used to configure the ",(0,i.jsx)(n.code,{children:"node-docker"})," service and spin up browser containers as specified."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'[docker]\n# Configs have a mapping between the Docker image to use and the capabilities that need to be matched to\n# start a container with the given image.\nconfigs = [\n    "selenium/standalone-chrome:latest", \'{"browserName": "chrome"}\',\n    "selenium/standalone-edge:latest", \'{"browserName": "edge"}\',\n    "selenium/standalone-firefox:latest", \'{"browserName": "firefox"}\'\n]\n\nhost-config-keys = ["Dns", "DnsOptions", "DnsSearch", "ExtraHosts", "Binds", "Mounts"]\n\n# URL for connecting to the docker daemon\n# Most simple approach, leave it as http://127.0.0.1:2375, and mount /var/run/docker.sock.\n# 127.0.0.1 is used because internally the container uses socat when /var/run/docker.sock is mounted \n# If var/run/docker.sock is not mounted: \n#   Windows: make sure Docker Desktop exposes the daemon via tcp, and use http://host.docker.internal:2375.\n#     macOS: install socat and run the following command, socat -4 TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock,\n#            then use http://host.docker.internal:2375.\n#     Linux: varies from machine to machine, please mount /var/run/docker.sock. If this does not work, please create an issue.\nurl = "http://127.0.0.1:2375"\n\n# Docker image used for video recording\nvideo-image = "selenium/video:ffmpeg-6.1-20231219"\n\n# Uncomment the following section if you are running the node on a separate VM\n# Fill out the placeholders with appropriate values\n#[server]\n#host = <ip-from-node-machine>\n#port = <port-from-node-machine>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"gwen-settings-file",children:"Gwen settings file"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:"{5}",children:"./project                      # Your project root\n \u2514\u2500\u2500 /gwen\n     \u2514\u2500\u2500 /conf\n         \u2514\u2500\u2500 /browsers\n             \u251c\u2500\u2500grid.conf      # Se Grid remote driver settings\n             \u2514\u2500\u2500grid.toml      # Se Grid docker config\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The init --docker commad will create a ",(0,i.jsx)(n.code,{children:"gwen/conf/browsers/grid.conf"})," file with the following content that will be used by Gwen to connect to the Grid with remote web driver."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'gwen {\n  web {\n    capabilities {\n      "se:recordVideo" = true\n      "se:recordVideo" = ${?GWEN_VIDEO}\n      "se:screenResolution" = "1920x1080"\n    }\n    remote {\n      url = "http://${env.SELENIUM_HUB}:4444/wd/hub"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"run-gwen-in-docker",children:"Run Gwen in docker"}),"\n",(0,i.jsxs)(n.p,{children:["Start your docker desktop engine app (see ",(0,i.jsx)(n.a,{href:"https://docs.docker.com/get-started/",children:"getting started with Docker"})," for more info)."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["If you're on a Mac or ARM, replace ",(0,i.jsx)(n.code,{children:"gwen/docker-compose.yml"})," with ",(0,i.jsx)(n.code,{children:"gwen/docker-compose-arm.yml"})]})}),"\n",(0,i.jsx)(n.p,{children:"Create the Gwen output directory if it does not already exist."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"mkdir -p gwen/output\n"})}),"\n",(0,i.jsx)(n.p,{children:"Run the following command to build your docker image"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"docker-compose -f gwen/docker-compose.yml build\n"})}),"\n",(0,i.jsx)(n.p,{children:"Run the following command in your project directory to launch Gwen in docker and run your features"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"docker-compose -f gwen/docker-compose.yml run gwen\n"})}),"\n",(0,i.jsxs)(n.p,{children:["To execute features in parallel (you can pass any number of ",(0,i.jsx)(n.a,{href:"/docs/launcher#environment-variables",children:"environment varaibles"})," in this manner)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"GWEN_PARALLEL=true docker-compose -f gwen/docker-compose.yml run gwen\n"})}),"\n",(0,i.jsxs)(n.p,{children:["To execute dry run instead (Since ",(0,i.jsx)(n.a,{href:"https://github.com/gwen-interpreter/gwen-web/releases/tag/v3.35.0",children:"v3.35.0"}),")"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"docker-compose -f gwen/docker-compose.yml run gwen-dry-run\n"})}),"\n",(0,i.jsx)(n.p,{children:"Tear it all down when done"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"docker-compose -f gwen/docker-compose.yml down\n"})}),"\n",(0,i.jsx)(n.h2,{id:"run-gwen-locally-against-grid-in-docker",children:"Run Gwen locally against Grid in Docker"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["If you're on a Mac or ARM, replace ",(0,i.jsx)(n.code,{children:"gwen/docker-compose.yml"})," with ",(0,i.jsx)(n.code,{children:"gwen/docker-compose-arm.yml"})]})}),"\n",(0,i.jsxs)(n.p,{children:["Set ",(0,i.jsx)(n.code,{children:"SE_START_VNC"})," to ",(0,i.jsx)(n.code,{children:"true"})," in your ",(0,i.jsx)(n.code,{children:"gwen/docker-compose.yml"})," file if you wish to view active sessions in the Grid console."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:"{16}",children:"services:\n  node-docker:\n    image: selenium/node-docker:latest\n    volumes:\n      - $PWD/gwen/output/.assets:/opt/selenium/assets\n      - $PWD/gwen/output/downloads:/home/seluser/Downloads\n      - $PWD/gwen/conf/browsers/grid.toml:/opt/selenium/docker.toml\n      - /var/run/docker.sock:/var/run/docker.sock\n    depends_on:\n      - selenium-hub\n    environment:\n      - SE_EVENT_BUS_HOST=selenium-hub\n      - SE_EVENT_BUS_PUBLISH_PORT=4442\n      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443\n      - SE_NODE_DOCKER_CONFIG_FILENAME=docker.toml\n      - SE_START_VNC=true\n    ..\n"})}),"\n",(0,i.jsx)(n.p,{children:"Run the following command to launch the Grid in Docker"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"docker-compose -f gwen/docker-compose.yml run -d --service-ports node-docker\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Open ",(0,i.jsx)(n.a,{href:"http://localhost:4444/ui#",children:"http://localhost:4444/ui#"})," to access the Grid console and verify that it is running and avaialable"]}),"\n",(0,i.jsx)(n.p,{children:"Run the following command to launch Gwen against your Grid."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"SELENIUM_HUB=localhost yarn gwen -b -c gwen/conf/browsers/grid.conf gwen/features\n"})}),"\n",(0,i.jsx)(n.p,{children:"If you have VNC enabled, you can click the active browser session in the Grid console to see it in action."}),"\n",(0,i.jsx)(n.p,{children:"Tear it all down when done"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"docker-compose -f gwen/docker-compose.yml down\n"})}),"\n",(0,i.jsx)(n.h2,{id:"video-capture",children:"Video capture"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["See also: ",(0,i.jsx)(n.a,{href:"/docs/reports/video-recordings",children:"Video recordings"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["If you set the ",(0,i.jsx)(n.a,{href:"/docs/launcher#environment-variables",children:(0,i.jsx)(n.code,{children:"GWEN_VIDEO"})})," environment variable or the ",(0,i.jsx)(n.code,{children:"se:recordVideo"})," capability setting to ",(0,i.jsx)(n.code,{children:"true"})," in your ",(0,i.jsx)(n.code,{children:"grid.conf"})," file, MP4 video recordings of each session will be attached to the feature level ",(0,i.jsx)(n.a,{href:"/docs/reports/html",children:"HTML reports"}),". Set this to ",(0,i.jsx)(n.code,{children:"false"})," if you do not wish to capture video."]}),"\n",(0,i.jsxs)(n.p,{children:["File: ",(0,i.jsx)(n.em,{children:"gwen/conf/browsers/grid.conf"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:"{4}",children:'gwen {\n  web {\n    capabilities {\n      "se:recordVideo" = true\n    }\n    ..\n  }\n}\n'})}),"\n",(0,i.jsx)(n.admonition,{title:"video settings",type:"note",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/settings#gwen-video.timeoutSecs",children:(0,i.jsx)(n.code,{children:"gwen-video.timeoutSecs"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Time to wait for asyncronous video writes to complete (override only if default does not suffice)"}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,i.jsx)(n.admonition,{title:"Limitation",type:"caution",children:(0,i.jsxs)(n.p,{children:["Videos will not be recorded when ",(0,i.jsx)(n.a,{href:"/docs/settings#gwen-web-browser-headless",children:"headless browser"})," or interactive (non ",(0,i.jsx)(n.a,{href:"/docs/launcher#gwen-launch-options-repl",children:"--repl"}),") modes are enabled."]})}),"\n",(0,i.jsx)(n.h2,{id:"downloading-files-in-chrome",children:"Downloading Files in Chrome"}),"\n",(0,i.jsxs)(n.p,{children:["Configure the following in your ",(0,i.jsx)(n.code,{children:"conf/browsers/grid.conf"})," file to enable automatic file downloads for Chrome in the Grid."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:"{8-30}",children:'gwen {\n  web {\n    capabilities {\n      "se:startVNC" = true\n      "se:recordVideo" = true\n      "se:recordVideo" = ${?GWEN_VIDEO}\n      "se:screenResolution" = "1920x1080"\n      "goog:chromeOptions" {\n        prefs {\n           download {\n             prompt_for_download = false\n             directory_upgrade = true\n             default_directory = "/home/seluser/Downloads"\n           }\n           profile {\n             default_content_settings {\n               popups = 0\n             }\n             default_content_setting_values {\n               automatic_downloads = 1\n             }\n           }\n           safebrowsing {\n             enabled = false\n           }\n           plugins: {\n             plugins_disabled = false\n           }\n         }\n      }\n    }\n    remote {\n      url = "http://${env.SELENIUM_HUB}:4444/wd/hub"\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Downloaded files will be saved to the ",(0,i.jsx)(n.code,{children:"gwen/output/downloads"})," folder of your project"]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},9329:(e,n,r)=>{r.d(n,{A:()=>s});r(6540);var o=r(4164);const i={tabItem:"tabItem_Ymn6"};var t=r(4848);function s(e){let{children:n,hidden:r,className:s}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,o.A)(i.tabItem,s),hidden:r,children:n})}},5537:(e,n,r)=>{r.d(n,{A:()=>v});var o=r(6540),i=r(4164),t=r(5627),s=r(6347),l=r(372),a=r(604),c=r(1861),d=r(8749);function u(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:r}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:r,attributes:o,default:i}}=e;return{value:n,label:r,attributes:o,default:i}}))}(r);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function m(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:r}=e;const i=(0,s.W6)(),t=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,a.aZ)(t),(0,o.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(i.location.search);n.set(t,e),i.replace({...i.location,search:n.toString()})}),[t,i])]}function g(e){const{defaultValue:n,queryString:r=!1,groupId:i}=e,t=h(e),[s,a]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=r.find((e=>e.default))??r[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:t}))),[c,u]=p({queryString:r,groupId:i}),[g,f]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,t]=(0,d.Dv)(r);return[i,(0,o.useCallback)((e=>{r&&t.set(e)}),[r,t])]}({groupId:i}),w=(()=>{const e=c??g;return m({value:e,tabValues:t})?e:null})();(0,l.A)((()=>{w&&a(w)}),[w]);return{selectedValue:s,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);a(e),u(e),f(e)}),[u,f,t]),tabValues:t}}var f=r(9136);const w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=r(4848);function j(e){let{className:n,block:r,selectedValue:o,selectValue:s,tabValues:l}=e;const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,t.a_)(),d=e=>{const n=e.currentTarget,r=a.indexOf(n),i=l[r].value;i!==o&&(c(n),s(i))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=a.indexOf(e.currentTarget)+1;n=a[r]??a[0];break}case"ArrowLeft":{const r=a.indexOf(e.currentTarget)-1;n=a[r]??a[a.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":r},n),children:l.map((e=>{let{value:n,label:r,attributes:t}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>{a.push(e)},onKeyDown:u,onClick:d,...t,className:(0,i.A)("tabs__item",w.tabItem,t?.className,{"tabs__item--active":o===n}),children:r??n},n)}))})}function k(e){let{lazy:n,children:r,selectedValue:t}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===t));return e?(0,o.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function b(e){const n=g(e);return(0,x.jsxs)("div",{className:(0,i.A)("tabs-container",w.tabList),children:[(0,x.jsx)(j,{...n,...e}),(0,x.jsx)(k,{...n,...e})]})}function v(e){const n=(0,f.A)();return(0,x.jsx)(b,{...e,children:u(e.children)},String(n))}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var o=r(6540);const i={},t=o.createContext(i);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);