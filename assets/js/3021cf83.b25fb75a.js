"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[538],{2479:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return f},default:function(){return y},frontMatter:function(){return w},metadata:function(){return b},toc:function(){return v}});var a=n(7462),r=n(3366),i=n(7294),l=n(3905),o=n(9443);var s=function(){var e=(0,i.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=n(6010),p="tabItem_1uMI",d="tabItemActive_2DSg";var m=37,c=39;var g=function(e){var t=e.lazy,n=e.block,a=e.defaultValue,r=e.values,l=e.groupId,o=e.className,g=s(),k=g.tabGroupChoices,h=g.setTabGroupChoices,w=(0,i.useState)(a),f=w[0],b=w[1],v=i.Children.toArray(e.children),N=[];if(null!=l){var y=k[l];null!=y&&y!==f&&r.some((function(e){return e.value===y}))&&b(y)}var x=function(e){var t=e.currentTarget,n=N.indexOf(t),a=r[n].value;b(a),null!=l&&(h(l,a),setTimeout((function(){var e,n,a,r,i,l,o,s;(e=t.getBoundingClientRect(),n=e.top,a=e.left,r=e.bottom,i=e.right,l=window,o=l.innerHeight,s=l.innerWidth,n>=0&&i<=s&&r<=o&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(d),setTimeout((function(){return t.classList.remove(d)}),2e3))}),150))},T=function(e){var t,n;switch(e.keyCode){case c:var a=N.indexOf(e.target)+1;n=N[a]||N[0];break;case m:var r=N.indexOf(e.target)-1;n=N[r]||N[N.length-1]}null==(t=n)||t.focus()};return i.createElement("div",{className:"tabs-container"},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":n},o)},r.map((function(e){var t=e.value,n=e.label;return i.createElement("li",{role:"tab",tabIndex:f===t?0:-1,"aria-selected":f===t,className:(0,u.Z)("tabs__item",p,{"tabs__item--active":f===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:T,onFocus:x,onClick:x},n)}))),t?(0,i.cloneElement)(v.filter((function(e){return e.props.value===f}))[0],{className:"margin-vert--md"}):i.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==f})}))))};var k=function(e){var t=e.children,n=e.hidden,a=e.className;return i.createElement("div",{role:"tabpanel",hidden:n,className:a},t)},h=["components"],w={sidebar_position:1},f="Getting Started",b={unversionedId:"getting-started",id:"getting-started",isDocsHomePage:!1,title:"Getting Started",description:"Gwen Web",source:"@site/docs/getting-started.mdx",sourceDirName:".",slug:"/getting-started",permalink:"/docs/getting-started",editUrl:"https://github.com/gwen-interpreter/gwen-interpreter.github.io/gwen-web/docs/getting-started.mdx",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Settings",permalink:"/docs/configuration/settings"}},v=[{value:"Gwen Web",id:"gwen-web",children:[]},{value:"System Requirements",id:"system-requirements",children:[]},{value:"Installing Gwen",id:"installing-gwen",children:[]},{value:"Initialising a working directory",id:"initialising-a-working-directory",children:[]},{value:"Using Gwen",id:"using-gwen",children:[{value:"1. Declare Features",id:"1-declare-features",children:[]},{value:"2. Define Meta",id:"2-define-meta",children:[]},{value:"3. Launch Gwen",id:"3-launch-gwen",children:[]}]}],N={toc:v};function y(e){var t=e.components,n=(0,r.Z)(e,h);return(0,l.kt)("wrapper",(0,a.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"getting-started"},"Getting Started"),(0,l.kt)("h2",{id:"gwen-web"},"Gwen Web"),(0,l.kt)("p",null,"Gwen-Web is a Gherkin interpreter that executes ",(0,l.kt)("a",{parentName:"p",href:"https://cucumber.io/docs/gherkin/reference/"},"feature specs")," by binding them to ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen/wiki/Meta-Features"},"meta specs")," that you write to drive automated web testing or repetitive online processesing using a Gherkin ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/wiki/Supported-DSL"},"web DSL"),"."),(0,l.kt)("h2",{id:"system-requirements"},"System Requirements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Linux, Mac or Windows OS"),(0,l.kt)("li",{parentName:"ul"},"Chrome, Firefox, Safari, Edge or IE web browser"),(0,l.kt)("li",{parentName:"ul"},"Java JRE 8+ (version 1.8 or higher)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"You can check if you have Java installed by opening a command prompt and typing ",(0,l.kt)("inlineCode",{parentName:"li"},"java -version.")," A version will be displayed if you do have it installed (",(0,l.kt)("a",{parentName:"li",href:"https://www.java.com/en/download/manual.jsp"},"install Java"),")."))),(0,l.kt)("li",{parentName:"ul"},"node",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Required if you intend to install and run Gwen from npm (",(0,l.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/"},"install node"),")")))),(0,l.kt)("h2",{id:"installing-gwen"},"Installing Gwen"),(0,l.kt)("p",null,"Install Gwen using one of the following methods:"),(0,l.kt)(g,{defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"},{label:"pnpm",value:"pnpm"},{label:"Standalone",value:"standalone"}],mdxType:"Tabs"},(0,l.kt)(k,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"npm i --save-dev @gweninterpreter/gwen-web\n"))),(0,l.kt)(k,{value:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"yarn add -D @gweninterpreter/gwen-web\n"))),(0,l.kt)(k,{value:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"pnpm add -D @gweninterpreter/gwen-web\n"))),(0,l.kt)(k,{value:"standalone",mdxType:"TabItem"},(0,l.kt)("p",null,"Download a ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/releases"},"Gwen release")," ZIP, extract it to a desired location and add that to your system ",(0,l.kt)("inlineCode",{parentName:"p"},"PATH")))),(0,l.kt)("h2",{id:"initialising-a-working-directory"},"Initialising a working directory"),(0,l.kt)("p",null,"Once you've installed Gwen, you can initialise a working directory by running the ",(0,l.kt)("inlineCode",{parentName:"p"},"init")," command. This will generate the following standard Gwen file system setup for you and help you to get started."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," root                       # Project root directory\n \u251c\u2500\u2500 gwen.conf              # Common/default Gwen settings\n \u2514\u2500\u2500 gwen\n     \u251c\u2500\u2500 .gitignore         # Git ignore file\n     \u251c\u2500\u2500 README.md\n     \u251c\u2500\u2500 browsers           # Browser settings\n     \u2502   \u251c\u2500\u2500 chrome.conf    # - default is chrome\n     \u2502   \u251c\u2500\u2500 edge.conf\n     \u2502   \u251c\u2500\u2500 firefox.conf\n     \u2502   \u251c\u2500\u2500 safari.conf\n     \u2502   \u251c\u2500\u2500 ie.conf\n     \u2502   \u251c\u2500\u2500 remote.conf    # Remote web driver settings\n     \u2502   \u2514\u2500\u2500 README.md\n     \u251c\u2500\u2500 env                # Environment settings\n     \u2502   \u251c\u2500\u2500 local.conf     # - default is local\n     \u2502   \u251c\u2500\u2500 dev.conf\n     \u2502   \u251c\u2500\u2500 test.conf\n     \u2502   \u2514\u2500\u2500 README.md\n     \u251c\u2500\u2500 features           # Features and associative meta\n     \u2502   \u2514\u2500\u2500 README.md\n     \u251c\u2500\u2500 meta               # Optional common/reusable meta\n     \u2502    \u2514\u2500\u2500 README.md\n     \u251c\u2500\u2500 output             # Output directory\n     \u2514\u2500\u2500 samples            # Sample features and meta\n")),(0,l.kt)("p",null,"Run the following ",(0,l.kt)("inlineCode",{parentName:"p"},"init")," command in the project root directory that you wish to initialise as follows:"),(0,l.kt)(g,{defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"},{label:"pnpm",value:"pnpm"},{label:"Standalone",value:"standalone"}],mdxType:"Tabs"},(0,l.kt)(k,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"npm run gwen init\n"))),(0,l.kt)(k,{value:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"yarn gwen init\n"))),(0,l.kt)(k,{value:"pnpm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"pnpm gwen init\n"))),(0,l.kt)(k,{value:"standalone",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"gwen init .\n")))),(0,l.kt)("h2",{id:"using-gwen"},"Using Gwen"),(0,l.kt)("p",null,"Once you have installed Gwen and initialised a working directory, achieving automation is a three step process:"),(0,l.kt)("h3",{id:"1-declare-features"},"1. Declare Features"),(0,l.kt)("p",null,"Write ",(0,l.kt)("a",{parentName:"p",href:"https://cucumber.io/docs/gherkin/reference/#feature"},"feature specs")," to describe the intented behaviour in a declarative manner without giving any thought to automation."),(0,l.kt)("p",null,"For example, create a new todo.feature file with the following content in your gwen/features folder."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"File: gwen/features/todo.feature")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-gherkin"},"Feature: Todo\n \n  Scenario: Create todo list\n    Given a new todo list\n     When the following items are added\n          | New Item      |\n          | Get the milk  |\n          | Walk the dog  |\n     Then the list will contain 2 items\n")),(0,l.kt)("h3",{id:"2-define-meta"},"2. Define Meta"),(0,l.kt)("p",null,"Write associated ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen/wiki/Meta-Features"},"meta specs")," to define the step definitions for all steps in your features."),(0,l.kt)("p",null,"Each step definition is defined as a ",(0,l.kt)("inlineCode",{parentName:"p"},"@StepDef")," annotated scenario with a name that matches the calling step and contains one or more steps that call out to other step definitions or predefined Gwen ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/wiki/Supported-DSL"},"Web DSL")," steps that perform the prescribed browser operations. Steps containing ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen/wiki/Data-Tables"},"Data tables")," can also be mapped to step definitions using the ",(0,l.kt)("inlineCode",{parentName:"p"},"@ForEach")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"@DataTable")," annotations as shown in the example. Inputs to steps can also be parameterised using the ",(0,l.kt)("inlineCode",{parentName:"p"},"<param>")," syntax and resolved with ",(0,l.kt)("inlineCode",{parentName:"p"},"$<param>"),"."),(0,l.kt)("p",null,"For example, create a new ",(0,l.kt)("inlineCode",{parentName:"p"},"todo.meta")," file with the following content in your ",(0,l.kt)("em",{parentName:"p"},"gwen/features")," folder. "),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Associative Meta:")," By default, Gwen will associate and bind same named ",(0,l.kt)("inlineCode",{parentName:"p"},"*.meta")," files to same named ",(0,l.kt)("inlineCode",{parentName:"p"},"*.feature")," files ",(0,l.kt)("strong",{parentName:"p"},"only")," when it discovers such pairs in the same directory!")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"File: gwen/features/todo.meta")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-gherkin"},'Feature: Todo Meta (automation glue)\n\n  @StepDef\n  Scenario: a new todo list\n       When I navigate to "http://todomvc.com/examples/react"\n       Then the todo field can be located by class "new-todo"\n        And count can be located by css ".todo-count strong"\n                        \n  @StepDef\n  @ForEach\n  @DataTable(header="top")\n  Scenario: the following items are added\n       When I enter data[New Item] in the todo field\n\n  @StepDef\n  Scenario: the list will contain <expected> items\n       Then count should be "$<expected>"\n')),(0,l.kt)("h3",{id:"3-launch-gwen"},"3. Launch Gwen"),(0,l.kt)("p",null,"Launch Gwen in your project root directory to execute your features!"),(0,l.kt)(g,{defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"},{label:"pnpm",value:"pnpm"},{label:"Standalone",value:"standalone"}],mdxType:"Tabs"},(0,l.kt)(k,{value:"npm",mdxType:"TabItem"},(0,l.kt)("p",null,"Execute all features"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"npm run gwen -b /gwen/features\n")),(0,l.kt)("p",null,"Execute one feature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"npm run gwen -b /gwen/features/todo.feature\n"))),(0,l.kt)(k,{value:"yarn",mdxType:"TabItem"},(0,l.kt)("p",null,"Execute all features"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"yarn gwen -b /gwen/features\n")),(0,l.kt)("p",null,"Execute one feature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"yarn gwen -b /gwen/features/todo.feature\n"))),(0,l.kt)(k,{value:"pnpm",mdxType:"TabItem"},(0,l.kt)("p",null,"Execute all features"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"pnpm gwen -b /gwen/features\n")),(0,l.kt)("p",null,"Execute one feature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"pnpm gwen -b /gwen/features/todo.feature\n"))),(0,l.kt)(k,{value:"standalone",mdxType:"TabItem"},(0,l.kt)("p",null,"Execute all features"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"gwen -b /features\n")),(0,l.kt)("p",null,"Execute one feature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"gwen -b /features/todo.feature\n")))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The ",(0,l.kt)("inlineCode",{parentName:"p"},"-b")," (",(0,l.kt)("inlineCode",{parentName:"p"},"--batch"),") switch tells Gwen to exit immediately after feature execution completes. Omitting it will open the interactive ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen/wiki/REPL-Console"},"Gwen REPL Console")," upon completion instead.")))}y.isMDXComponent=!0}}]);