"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[359],{8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},5064:function(e,t,n){n.d(t,{Z:function(){return p}});var a=n(7294),r=n(9443);var o=function(){var e=(0,a.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=n(6010),l="tabItem_1uMI",s="tabItemActive_2DSg";var u=37,c=39;var p=function(e){var t=e.lazy,n=e.block,r=e.defaultValue,p=e.values,d=e.groupId,m=e.className,g=o(),h=g.tabGroupChoices,f=g.setTabGroupChoices,k=(0,a.useState)(r),w=k[0],b=k[1],v=a.Children.toArray(e.children),N=[];if(null!=d){var y=h[d];null!=y&&y!==w&&p.some((function(e){return e.value===y}))&&b(y)}var x=function(e){var t=e.currentTarget,n=N.indexOf(t),a=p[n].value;b(a),null!=d&&(f(d,a),setTimeout((function(){var e,n,a,r,o,i,l,u;(e=t.getBoundingClientRect(),n=e.top,a=e.left,r=e.bottom,o=e.right,i=window,l=i.innerHeight,u=i.innerWidth,n>=0&&o<=u&&r<=l&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},C=function(e){var t,n;switch(e.keyCode){case c:var a=N.indexOf(e.target)+1;n=N[a]||N[0];break;case u:var r=N.indexOf(e.target)-1;n=N[r]||N[N.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},m)},p.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,className:(0,i.Z)("tabs__item",l,{"tabs__item--active":w===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:C,onFocus:x,onClick:x},n)}))),t?(0,a.cloneElement)(v.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}},6056:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return g}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=n(5064),l=n(8215),s=["components"],u={sidebar_position:3},c="Using Gwen",p={unversionedId:"using-gwen",id:"using-gwen",isDocsHomePage:!1,title:"Using Gwen",description:"Once you have installed Gwen and initialised a working directory, achieving automation is a three step process:",source:"@site/docs/using-gwen.mdx",sourceDirName:".",slug:"/using-gwen",permalink:"/docs/using-gwen",editUrl:"https://github.com/gwen-interpreter/gwen-interpreter.github.io/gwen-web/docs/using-gwen.mdx",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Get Started",permalink:"/docs/get-started"},next:{title:"Settings",permalink:"/docs/configuration/settings"}},d=[{value:"1. Declare Features",id:"1-declare-features",children:[]},{value:"2. Compose Meta",id:"2-compose-meta",children:[]},{value:"3. Launch Gwen",id:"3-launch-gwen",children:[]}],m={toc:d};function g(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-gwen"},"Using Gwen"),(0,o.kt)("p",null,"Once you have installed Gwen and initialised a working directory, achieving automation is a three step process:"),(0,o.kt)("h2",{id:"1-declare-features"},"1. Declare Features"),(0,o.kt)("p",null,"Write ",(0,o.kt)("a",{parentName:"p",href:"https://cucumber.io/docs/gherkin/reference/#feature"},"feature specs")," to describe the intented behaviour in a declarative manner without giving any thought to automation."),(0,o.kt)("p",null,"For example, create a new todo.feature file with the following content in your gwen/features folder."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"File: gwen/features/todo.feature")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},"Feature: Todo\n \n  Scenario: Create todo list\n    Given a new todo list\n     When the following items are added\n          | Item          |\n          | Get the milk  |\n          | Walk the dog  |\n     Then the list will contain 2 items\n")),(0,o.kt)("h2",{id:"2-compose-meta"},"2. Compose Meta"),(0,o.kt)("p",null,"Write associated ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen/wiki/Meta-Features"},"meta specs")," to define the step definitions for all steps in your features."),(0,o.kt)("p",null,"Each step definition is defined as a ",(0,o.kt)("inlineCode",{parentName:"p"},"@StepDef")," annotated scenario with a name that matches the calling step and contains one or more steps that call out to other step definitions or predefined Gwen ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/wiki/Supported-DSL"},"Web DSL")," steps that perform the prescribed browser operations. Steps containing ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen/wiki/Data-Tables"},"Data tables")," can also be mapped to step definitions using the ",(0,o.kt)("inlineCode",{parentName:"p"},"@ForEach")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"@DataTable")," annotations as shown in the example. Inputs to steps can also be parameterised using the ",(0,o.kt)("inlineCode",{parentName:"p"},"<param>")," syntax and resolved with ",(0,o.kt)("inlineCode",{parentName:"p"},"$<param>"),"."),(0,o.kt)("p",null,"For example, create a new ",(0,o.kt)("inlineCode",{parentName:"p"},"todo.meta")," file with the following content in your ",(0,o.kt)("em",{parentName:"p"},"gwen/features")," folder. "),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Associative Meta:")," By default, Gwen will associate and bind same named ",(0,o.kt)("inlineCode",{parentName:"p"},"*.meta")," files to same named ",(0,o.kt)("inlineCode",{parentName:"p"},"*.feature")," files ",(0,o.kt)("strong",{parentName:"p"},"only")," when it discovers such pairs in the same directory!")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"File: gwen/features/todo.meta")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-gherkin"},'Feature: Todo Meta (automation glue)\n\n  @StepDef\n  Scenario: a new todo list\n       When I navigate to "http://todomvc.com/examples/react"\n       Then the todo field can be located by class "new-todo"\n        And count can be located by css ".todo-count strong"\n                        \n  @StepDef\n  @ForEach\n  @DataTable(header="top")\n  Scenario: the following items are added\n       When I enter data[Item] in the todo field\n\n  @StepDef\n  Scenario: the list will contain <expected> items\n       Then count should be "$<expected>"\n')),(0,o.kt)("h2",{id:"3-launch-gwen"},"3. Launch Gwen"),(0,o.kt)("p",null,"Launch Gwen in your project root directory to execute your features!"),(0,o.kt)(i.Z,{defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"},{label:"Standalone",value:"standalone"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("p",null,"Execute all features"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"npm run gwen -b /gwen/features\n")),(0,o.kt)("p",null,"Execute one feature"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"npm run gwen -b /gwen/features/todo.feature\n"))),(0,o.kt)(l.Z,{value:"yarn",mdxType:"TabItem"},(0,o.kt)("p",null,"Execute all features"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"yarn gwen -b /gwen/features\n")),(0,o.kt)("p",null,"Execute one feature"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"yarn gwen -b /gwen/features/todo.feature\n"))),(0,o.kt)(l.Z,{value:"standalone",mdxType:"TabItem"},(0,o.kt)("p",null,"Execute all features"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"gwen -b /features\n")),(0,o.kt)("p",null,"Execute one feature"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"gwen -b /features/todo.feature\n")))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"-b")," (",(0,o.kt)("inlineCode",{parentName:"p"},"--batch"),") switch tells Gwen to exit immediately after feature execution completes. Omitting it will open the interactive ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen/wiki/REPL-Console"},"Gwen REPL Console")," upon completion instead.")))}g.isMDXComponent=!0}}]);