"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[721],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,k=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return t?r.createElement(k,l(l({ref:n},d),{},{components:t})):r.createElement(k,l({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5162:function(e,n,t){t.d(n,{Z:function(){return l}});var r=t(7294),a=t(6010),o="tabItem_Ymn6";function l(e){var n=e.children,t=e.hidden,l=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:t},n)}},5488:function(e,n,t){t.d(n,{Z:function(){return m}});var r=t(3117),a=t(7294),o=t(6010),l=t(2389),i=t(7392),s=t(7094),c=t(2466),d="tabList__CuJ",p="tabItem_LNqP";function u(e){var n,t,l=e.lazy,u=e.block,m=e.defaultValue,k=e.values,g=e.groupId,h=e.className,w=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=k?k:w.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),v=(0,i.l)(f,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===m?m:null!=(n=null!=m?m:null==(t=w.find((function(e){return e.props.default})))?void 0:t.props.value)?n:w[0].props.value;if(null!==b&&!f.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),y=N.tabGroupChoices,E=N.setTabGroupChoices,j=(0,a.useState)(b),S=j[0],D=j[1],O=[],R=(0,c.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var x=y[g];null!=x&&x!==S&&f.some((function(e){return e.value===x}))&&D(x)}var T=function(e){var n=e.currentTarget,t=O.indexOf(n),r=f[t].value;r!==S&&(R(n),D(r),null!=g&&E(g,String(r)))},_=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r,a=O.indexOf(e.currentTarget)+1;t=null!=(r=O[a])?r:O[0];break;case"ArrowLeft":var o,l=O.indexOf(e.currentTarget)-1;t=null!=(o=O[l])?o:O[O.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",d)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":u},h)},f.map((function(e){var n=e.value,t=e.label,l=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:S===n?0:-1,"aria-selected":S===n,key:n,ref:function(e){return O.push(e)},onKeyDown:_,onFocus:T,onClick:T},l,{className:(0,o.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":S===n})}),null!=t?t:n)}))),l?(0,a.cloneElement)(w.filter((function(e){return e.props.value===S}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},w.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==S})}))))}function m(e){var n=(0,l.Z)();return a.createElement(u,(0,r.Z)({key:String(n)},e))}},3350:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return m}});var r=t(3117),a=t(102),o=(t(7294),t(3905)),l=(t(9960),t(5488)),i=t(5162),s=(t(4996),["components"]),c={title:"Docker",toc_min_heading_level:2,toc_max_heading_level:3},d="Running Gwen in Docker",p={unversionedId:"docker",id:"docker",title:"Docker",description:"Sometimes it may be useful to run Gwen in Docker. For example, if you want to run Gwen in a Jenkins pipeline on a build server or node agent.",source:"@site/docs/12-docker.mdx",sourceDirName:".",slug:"/docker",permalink:"/docs/docker",draft:!1,editUrl:"https://github.com/gwen-interpreter/gwen-interpreter.github.io/edit/master/docs/12-docker.mdx",tags:[],version:"current",sidebarPosition:12,frontMatter:{title:"Docker",toc_min_heading_level:2,toc_max_heading_level:3},sidebar:"tutorialSidebar",previous:{title:"Web Driver Management",permalink:"/docs/advanced/web-driver-management"},next:{title:"Jenkins",permalink:"/docs/jenkins"}},u={},m=[{value:"Package JSON script",id:"package-json-script",level:2},{value:"Docker Setup",id:"docker-setup",level:2},{value:"Dockerfile",id:"dockerfile",level:3},{value:"Docker compose file",id:"docker-compose-file",level:3},{value:"Selenoid browsers file",id:"selenoid-browsers-file",level:3},{value:"Gwen settings file",id:"gwen-settings-file",level:3},{value:"Run Gwen in docker",id:"run-gwen-in-docker",level:2},{value:"Video capture",id:"video-capture",level:2},{value:"Mac M1 notes",id:"mac-m1-notes",level:2},{value:"Chrome or Edge crashes",id:"chrome-or-edge-crashes",level:3}],k={toc:m};function g(e){var n=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"running-gwen-in-docker"},"Running Gwen in Docker"),(0,o.kt)("p",null,"Sometimes it may be useful to run Gwen in ",(0,o.kt)("a",{parentName:"p",href:"https://www.docker.com/"},"Docker"),". For example, if you want to run Gwen in a ",(0,o.kt)("a",{parentName:"p",href:"/docs/jenkins"},"Jenkins")," pipeline on a build server or node agent.\nSetting up Gwen to run in a ",(0,o.kt)("a",{parentName:"p",href:"https://aerokube.com/selenoid/"},"Selenoid")," container in Docker is describe here."),(0,o.kt)("h2",{id:"package-json-script"},"Package JSON script"),(0,o.kt)("p",null,"Add the following ",(0,o.kt)("inlineCode",{parentName:"p"},"gwen:selenoid")," script to the ",(0,o.kt)("inlineCode",{parentName:"p"},"scripts")," section of the ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," file in your project, replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"gwen/samples")," with the directory containing the features you want to execute.\nThis will be called by the ",(0,o.kt)("inlineCode",{parentName:"p"},"gwen")," container that we will create and run in Docker."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{3}","{3}":!0},'"scripts": {\n  "gwen": "gwen",\n  "gwen:selenoid": "gwen -b -c gwen/browsers/selenoid.conf gwen/samples"\n}\n')),(0,o.kt)("h2",{id:"docker-setup"},"Docker Setup"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Since ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gwen-interpreter/gwen-web/releases/tag/v3.16.0"},"v3.16.0"),", the ",(0,o.kt)("a",{parentName:"p",href:"/docs/cli#gwen-cli-options-init-docker"},(0,o.kt)("inlineCode",{parentName:"a"},"init --docker"))," command was introduced to generate Docker and Selenoid files in your project. You will need to create the files manually if you are using an older version.")),(0,o.kt)(l.Z,{groupId:"setup",defaultValue:"project",values:[{label:"Project",value:"project"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"project",mdxType:"TabItem"},(0,o.kt)(l.Z,{groupId:"jstool",defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"npm",value:"npm"},{label:"pnpm",value:"pnpm"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"yarn",mdxType:"TabItem"},(0,o.kt)("p",null,"Run the following command in the root of your project to generate all the necessary Docker and Selenoid files"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"yarn gwen init --docker\n"))),(0,o.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("p",null,"Run the following command in the root of your project to generate all the necessary Docker and Selenoid files"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm run gwen init --docker\n"))),(0,o.kt)(i.Z,{value:"pnpm",mdxType:"TabItem"},(0,o.kt)("p",null,"Run the following command in the root of your project to generate all the necessary Docker and Selenoid files"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"pnpm gwen init --docker\n")))))),(0,o.kt)("h3",{id:"dockerfile"},"Dockerfile"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{3}","{3}":!0},"./project                    # Your project root\n \u2514\u2500\u2500 /gwen\n     \u2514\u2500\u2500Dockerfile           # Docker image file\n")),(0,o.kt)("p",null,"The init --docker commad will create a ",(0,o.kt)("inlineCode",{parentName:"p"},"gwen/DockerFile")," with the following content to build an Alpine Linux node and Yarn based image with bash and Open JDK 8 JRE installed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"# base alpine image with node\nFROM node:17-alpine\n\n# install bash and java\nRUN apk update \\\n    && apk add bash \\\n    && apk add openjdk8-jre\n\n# Run as a non root user\nRUN addgroup -S gwen && adduser -S gwen -G gwen -u 4936\nUSER gwen\n")),(0,o.kt)("p",null,"Should you prefer a Red Hat Linux and Open JDK 8 based image with node and Yarn installed instead, you can change the content to this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"# base Red Hat image with open JDK 8\nFROM adoptopenjdk/openjdk8:ubi\n\n# install node & yarn\nRUN dnf module install nodejs:16 -y\nRUN npm install --global yarn\n\n# Run as a non root user\nRUN useradd -u 4936 gwen\nUSER gwen\n")),(0,o.kt)("h3",{id:"docker-compose-file"},"Docker compose file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{4}","{4}":!0},"./project                        # Your project root\n \u2514\u2500\u2500 /gwen\n     \u251c\u2500\u2500 Dockerfile              # Docker image file\n     \u2514\u2500\u2500 docker-compose.yml      # Docker compose YAML file\n")),(0,o.kt)("p",null,"The init --docker commad will create a ",(0,o.kt)("inlineCode",{parentName:"p"},"gwen/docker-compose.yml")," file with the following content to create containers for Gwen, Chrome, Firefox, and Edge web browsers, a video recorder, and a Selenoid hub that Gwen will connect to."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: \'3.5\'\nservices:\n  chrome:\n    image: selenoid/chrome:latest\n    networks:\n      - gwen-net\n  edge:\n    image: browsers/edge:latest\n    networks:\n      - gwen-net\n  firefox:\n    image: selenoid/firefox:latest\n    networks:\n      - gwen-net\n  video-recorder:\n    image: selenoid/video-recorder:latest-release\n    networks:\n      - gwen-net\n  selenoid:\n    image: aerokube/selenoid:latest-release\n    networks:\n      - gwen-net\n    ports:\n      - "4444:4444"\n    volumes:\n      - "$PWD/gwen/browsers:/etc/selenoid/:ro"\n      - "/var/run/docker.sock:/var/run/docker.sock"\n      - "$PWD/gwen/output/.video:/opt/selenoid/video"\n    environment:\n      - OVERRIDE_VIDEO_OUTPUT_DIR=$PWD/gwen/output/.video\n    command: ["-container-network", "gwen-net", "-video-output-dir", "/opt/selenoid/video"]\n  gwen:\n    depends_on:\n      - selenoid\n      - video-recorder\n      - $GWEN_BROWSER\n    build:\n      context: .\n      dockerfile: Dockerfile\n    environment:\n      - SELENIUM_HUB=selenoid\n      - NO_COLOR=1\n      - GWEN_BROWSER\n      - GWEN_DRY_RUN\n      - GWEN_PARALLEL\n      - GWEN_THREADS\n      - GWEN_HEADLESS\n      - GWEN_VIDEO\n    volumes:\n      - "$PWD:/project"\n    working_dir: /project\n    command: bash -c "yarn install && yarn gwen:selenoid"\n    networks:\n      - gwen-net\nnetworks:\n  gwen-net:\n    name: gwen-net\n')),(0,o.kt)("p",null,"Notice that the bash command in the ",(0,o.kt)("inlineCode",{parentName:"p"},"gwen")," container calls out to our ",(0,o.kt)("inlineCode",{parentName:"p"},"gwen:selenoid")," ",(0,o.kt)("a",{parentName:"p",href:"#package-json-script"},"package JSON script")," we created earlier. If you want to change what Gwen will run in Docker, just change that script!"),(0,o.kt)("h3",{id:"selenoid-browsers-file"},"Selenoid browsers file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{4}","{4}":!0},"./project                    # Your project root\n \u2514\u2500\u2500 /gwen                   # Gwen working directory\n     \u2514\u2500\u2500 /browsers\n         \u2514\u2500\u2500browsers.json    # Selenoid browsers file\n")),(0,o.kt)("p",null,"The init --docker commad will create a ",(0,o.kt)("inlineCode",{parentName:"p"},"gwen/browsers/browsers.json")," file with the following content that will be used by Selenoid to stand up the browsers in Docker."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "chrome": {\n    "default": "latest",\n    "versions": {\n      "latest": {\n        "image": "selenoid/chrome:latest",\n        "port": "4444",\n        "path": "/"\n      }\n    }\n  },\n  "MicrosoftEdge": {\n    "default": "latest",\n    "versions": {\n      "latest": {\n        "image": "browsers/edge:latest",\n        "port": "4444",\n        "path": "/"\n      }\n    }\n  },\n  "firefox": {\n    "default": "latest",\n    "versions": {\n      "latest": {\n        "image": "selenoid/firefox:latest",\n        "port": "4444",\n        "path": "/wd/hub"\n      }\n    }\n  }\n}\n')),(0,o.kt)("h3",{id:"gwen-settings-file"},"Gwen settings file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:"{5}","{5}":!0},"./project                    # Your project root\n \u2514\u2500\u2500 /gwen                   # Gwen working directory\n     \u2514\u2500\u2500 /browsers\n         \u251c\u2500\u2500browsers.json    # Selenoid browsers file\n         \u2514\u2500\u2500selenoid.conf    # Selenoid Gwen settings\n")),(0,o.kt)("p",null,"The init --docker commad will create a ",(0,o.kt)("inlineCode",{parentName:"p"},"gwen/browsers/selenoid.conf")," file with the following content that will be used by Gwen to connect to Selenoid."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'gwen {\n  web {\n    capability {\n      enableVNC = true\n      enableVideo = true\n    }\n    remote {\n      url = "http://${env.SELENIUM_HUB}:4444/wd/hub"\n    }\n  }\n}\n')),(0,o.kt)("p",null,"Notice that the our ",(0,o.kt)("inlineCode",{parentName:"p"},"gwen:selenoid")," ",(0,o.kt)("a",{parentName:"p",href:"#package-json-script"},"package JSON script")," we created earlier loads this configuration through the ",(0,o.kt)("a",{parentName:"p",href:"/docs/cli#gwen-cli-options-conf"},"-c|--conf")," CLI option."),(0,o.kt)("h2",{id:"run-gwen-in-docker"},"Run Gwen in docker"),(0,o.kt)("p",null,"Start your docker desktop (see ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/get-started/"},"getting started with Docker")," for more info)."),(0,o.kt)("p",null,"Create the Gwen output directory if it does not already exist."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir -p gwen/output\n")),(0,o.kt)("p",null,"Run the following command to build your docker image"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose -f gwen/docker-compose.yml build\n")),(0,o.kt)("p",null,"Run the following command in your project directory launch Gwen on chrome in docker"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"GWEN_BROWSER=chrome docker-compose -f gwen/docker-compose.yml run gwen\n")),(0,o.kt)("p",null,"To execute features in parallel (you can pass any number of ",(0,o.kt)("a",{parentName:"p",href:"/docs/cli#environment-variables"},"environment varaibles")," in this manner)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"GWEN_BROWSER=chrome GWEN_PARALLEL=true docker-compose -f gwen/docker-compose.yml run gwen\n")),(0,o.kt)("p",null,"Tear it all down when done"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"GWEN_BROWSER=chrome docker-compose -f gwen/docker-compose.yml down\n")),(0,o.kt)("h2",{id:"video-capture"},"Video capture"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"See also: ",(0,o.kt)("a",{parentName:"p",href:"/docs/reports/video-recordings"},"Video recordings")," ")),(0,o.kt)("p",null,"If you set the ",(0,o.kt)("a",{parentName:"p",href:"/docs/cli#environment-variables"},(0,o.kt)("inlineCode",{parentName:"a"},"GWEN_VIDEO"))," environment variable or the ",(0,o.kt)("inlineCode",{parentName:"p"},"gwen.web.capability.enableVideo")," setting ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," in your ",(0,o.kt)("inlineCode",{parentName:"p"},"selenoid.conf")," file, MP4 video recordings of each session will be attached to the feature level ",(0,o.kt)("a",{parentName:"p",href:"/docs/reports/html"},"HTML reports"),". Set this to ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," if you do not wish to capture video."),(0,o.kt)("p",null,"File: ",(0,o.kt)("em",{parentName:"p"},"gwen/browsers/selenoid.conf")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{5}","{5}":!0},"gwen {\n  web {\n    capability {\n      enableVNC = true\n      enableVideo = true\n    }\n    ..\n  }\n}\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"video settings")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/settings/reference#gwen-video.dir"},(0,o.kt)("inlineCode",{parentName:"a"},"gwen-video.dir"))," ",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Should match host directory mounted to ",(0,o.kt)("inlineCode",{parentName:"li"},"/opt/selenoid/video")," in Selenoid video-recorder"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/settings/reference#gwen-video.timeoutSecs"},(0,o.kt)("inlineCode",{parentName:"a"},"gwen-video.timeoutSecs"))," ",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Time to wait for asyncronous video writes to complete (override only if default does not suffice)")))))),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Limitation")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Since v3.16.0, videos will not be recorded when ",(0,o.kt)("a",{parentName:"p",href:"/docs/modes/parallel"},"parallel execution")," or ",(0,o.kt)("a",{parentName:"p",href:"/docs/settings/reference#gwen-web-browser-headless"},"headless browser")," modes are enabled."))),(0,o.kt)("h2",{id:"mac-m1-notes"},"Mac M1 notes"),(0,o.kt)("h3",{id:"chrome-or-edge-crashes"},"Chrome or Edge crashes"),(0,o.kt)("p",null,"If you're running Chrome or Edge in a Selenoid docker container on a Mac M1 and encounter the following error"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"(unknown error: DevToolsActivePort file doesn't exist)\n")),(0,o.kt)("p",null,"Make the following changes to the following files and to use the experimanal ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/seleniumhq-community/docker-seleniarm"},"Seleniarm")," images instead and try again."),(0,o.kt)("p",null,"File: ",(0,o.kt)("em",{parentName:"p"},"gwen/docker-compose.yml")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{4,8}","{4,8}":!0},"version: '3.5'\nservices:\n  chrome:\n    image: seleniarm/standalone-chromium:latest\n    networks:\n      - gwen-net\n  edge:\n    image: seleniarm/standalone-chromium:latest\n    networks:\n      - gwen-net\n")),(0,o.kt)("p",null,"File: ",(0,o.kt)("em",{parentName:"p"},"gwen/browsers/browsers.json")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{6,16}","{6,16}":!0},'  {\n  "chrome": {\n    "default": "latest",\n    "versions": {\n      "latest": {\n        "image": "seleniarm/standalone-chromium:latest",\n        "port": "4444",\n        "path": "/"\n      }\n    }\n  },\n  "MicrosoftEdge": {\n    "default": "latest",\n    "versions": {\n      "latest": {\n        "image": "seleniarm/standalone-chromium:latest",\n        "port": "4444",\n        "path": "/"\n      }\n    }\n  }\n}\n')),(0,o.kt)("p",null,"The Selenoid video recorder won't work with the experimental Seleniarm images, so you should disable video "),(0,o.kt)("p",null,"File: ",(0,o.kt)("em",{parentName:"p"},"gwen/browsers/selenoid.conf")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{5}","{5}":!0},'gwen {\n  web {\n    capability {\n      enableVNC = true\n      enableVideo = false\n    }\n    remote {\n      url = "http://${env.SELENIUM_HUB}:4444/wd/hub"\n    }\n  }\n}\n')))}g.isMDXComponent=!0}}]);